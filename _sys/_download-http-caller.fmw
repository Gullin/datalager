#! <?xml version="1.0" encoding="UTF-8" ?>
#! <WORKSPACE
#    Command-line to run this workspace:
#        "C:\Program Files\FME_2021_0_21306\fme.exe" C:\dev\Datalager_procsrc\_sys\_download-http-caller.fmw
#              --RotDirectory "../"
#              --ProcessName ""
#              --ProcessModulName ""
#              --InData "[TOMT]"
#              --OutputDirectory "C:\LKR_GIS\Datalager_procsrc\_geodatarepo\landskrona\lkr_gis"
#              --IsWholeProcessRun "1"
#    
#!   ARCGIS_COMPATIBILITY="ARCGIS_AUTO"
#!   ATTR_TYPE_ENCODING="SDF"
#!   BEGIN_PYTHON=""
#!   BEGIN_TCL=""
#!   CATEGORY=""
#!   DESCRIPTION=""
#!   DESTINATION="NONE"
#!   DESTINATION_ROUTING_FILE=""
#!   DOC_EXTENTS="8490.53 3455.58"
#!   DOC_TOP_LEFT="-1272.72 -2938.02"
#!   END_PYTHON=""
#!   END_TCL=""
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="21306"
#!   FME_DOCUMENT_GUID="a456b5d8-afd3-41f6-905c-61662b45b0e7"
#!   FME_DOCUMENT_PRIORGUID="db55302e-7057-43d9-9d10-e4021122d287,c298b240-db6a-413b-aec9-66e46a8a7ef1,2e23f814-4b08-4399-b411-1d65ccd125c2,e31d8739-5065-4875-8e5e-6b353b379a85,f8349406-e981-4617-9387-270a9a285a68,e4934e4c-b29d-4503-81cc-f71900d0b9a9,649bd530-0a8a-4efe-a226-3f7be228ea2c,812cc6ea-57ef-4c72-ba39-d2123112d0a2"
#!   FME_GEOMETRY_HANDLING="Enhanced"
#!   FME_IMPLICIT_CSMAP_REPROJECTION_MODE="Auto"
#!   FME_NAMES_ENCODING="windows-1252"
#!   FME_REPROJECTION_ENGINE="FME"
#!   FME_SERVER_SERVICES=""
#!   FME_STROKE_MAX_DEVIATION="0"
#!   HISTORY=""
#!   IGNORE_READER_FAILURE="No"
#!   LAST_SAVE_BUILD="FME(R) 2021.0.0.1 (20210315 - Build 21306 - WIN64)"
#!   LAST_SAVE_DATE="2022-12-05T10:13:22"
#!   LOG_FILE="$(RotDirectory)_log/FME-$(FME_MF_NAME).log"
#!   LOG_MAX_RECORDED_FEATURES="200"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOG_FEATURES="200"
#!   MULTI_WRITER_DATASET_ORDER="BY_ID"
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="2or3"
#!   REDIRECT_TERMINATORS="NONE"
#!   SAVE_ON_PROMPT_AND_RUN="Yes"
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   SOURCE="NONE"
#!   SOURCE_ROUTING_FILE=""
#!   TERMINATE_REJECTED="YES"
#!   TITLE=""
#!   USAGE=""
#!   USE_MARKDOWN=""
#!   VIEW_POSITION="1891.47 -246.713"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   ZOOM_SCALE="76"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! <READER_DATASETS>
#! <DATASET
#!   NAME="FeatureReader"
#!   OVERRIDE="--FeatureReaderDataset_FeatureReader"
#!   DATASET="../$(ProcessName)/_schema/_modul-settings-datasets.ini"
#! />
#! </READER_DATASETS>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI TEXT RotDirectory Katalogen där processen startar:"
#!   DEFAULT_VALUE="../"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR ProcessName Processnamn:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR ProcessModulName Processmodulsnamn:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI TEXT_OR_ATTR InData Indata:"
#!   DEFAULT_VALUE="[TOMT]"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR OutputDirectory Katalog för lagring av del av datalager:"
#!   DEFAULT_VALUE="C:\LKR_GIS\Datalager_procsrc\_geodatarepo\landskrona\lkr_gis"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR IsWholeProcessRun Är hela datalagerprocessen körd:"
#!   DEFAULT_VALUE="1"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI IGNORE OPTIONAL NAMEDGROUP FME_USER_PARAM_PRIVATE_GRP FeatureListFile Private Parameters"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI IGNORE OPTIONAL TEXT_OR_ATTR FeatureListFile Fil med listade features:"
#!   DEFAULT_VALUE="_modul-settings-datasets.ini"
#!   IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <USER_PARAMETERS
#!   FORM="eyJwYXJhbWV0ZXJzIjpbeyJkZWZhdWx0VmFsdWUiOiIuLi8iLCJlZGl0b3IiOiJwbGFpbnRleHQiLCJuYW1lIjoiUm90RGlyZWN0b3J5IiwicHJvbXB0IjoiS2F0YWxvZ2VuIGTDpHIgcHJvY2Vzc2VuIHN0YXJ0YXI6IiwicmVxdWlyZWQiOnRydWUsInNob3dFZGl0QnV0dG9uIjpmYWxzZSwidHlwZSI6InRleHQiLCJ2YWx1ZVR5cGUiOiJzdHJpbmcifSx7ImVkaXRvciI6InBsYWludGV4dCIsIm5hbWUiOiJQcm9jZXNzTmFtZSIsInByb21wdCI6IlByb2Nlc3NuYW1uOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJlZGl0b3IiOiJwbGFpbnRleHQiLCJuYW1lIjoiUHJvY2Vzc01vZHVsTmFtZSIsInByb21wdCI6IlByb2Nlc3Ntb2R1bHNuYW1uOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiJDOlxcRGV2XFxEYXRhbGFnZXJfcHJvY3NyY1xcbnZ2XFxfc2NoZW1hXFxfbW9kdWwtc2V0dGluZ3MtZGF0YXNldHMuaW5pIiwiZWRpdG9yIjoicGxhaW50ZXh0IiwibmFtZSI6IkluRGF0YSIsInByb21wdCI6IkluZGF0YToiLCJyZXF1aXJlZCI6dHJ1ZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiJDOlxcTEtSX0dJU1xcRGF0YWxhZ2VyX3Byb2NzcmNcXF9nZW9kYXRhcmVwb1xcbGFuZHNrcm9uYVxcbGtyX2dpcyIsImVkaXRvciI6InBsYWludGV4dCIsIm5hbWUiOiJPdXRwdXREaXJlY3RvcnkiLCJwcm9tcHQiOiJLYXRhbG9nIGbDtnIgbGFncmluZyBhdiBkZWwgYXYgZGF0YWxhZ2VyOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiIxIiwiZWRpdG9yIjoicGxhaW50ZXh0IiwibmFtZSI6IklzV2hvbGVQcm9jZXNzUnVuIiwicHJvbXB0Ijoiw4RyIGhlbGEgZGF0YWxhZ2VycHJvY2Vzc2VuIGvDtnJkOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJoaWRkZW4iOnRydWUsIm5hbWUiOiJGTUVfVVNFUl9QQVJBTV9QUklWQVRFX0dSUCIsInBhcmFtZXRlcnMiOlt7ImRlZmF1bHRWYWx1ZSI6Il9tb2R1bC1zZXR0aW5ncy1kYXRhc2V0cy5pbmkiLCJlZGl0b3IiOiJwbGFpbnRleHQiLCJoaWRkZW4iOnRydWUsIm5hbWUiOiJGZWF0dXJlTGlzdEZpbGUiLCJwcm9tcHQiOiJGaWwgbWVkIGxpc3RhZGUgZmVhdHVyZXM6IiwicmVxdWlyZWQiOmZhbHNlLCJzdXBwb3J0ZWRWYWx1ZVR5cGVzIjpbImV4cHJlc3Npb24iLCJnbG9iYWxQYXJhbWV0ZXIiXSwidHlwZSI6InRleHQiLCJ2YWx1ZVR5cGUiOiJzdHJpbmcifV0sInByb21wdCI6IlByaXZhdGUgUGFyYW1ldGVycyIsInJlcXVpcmVkIjpmYWxzZSwidHlwZSI6Imdyb3VwIiwidmFsdWVUeXBlIjoic3RyaW5nIn1dfQ=="
#! >
#! <PARAMETER_INFO>
#!     <INFO NAME="FME_USER_PARAM_PRIVATE_GRP" IS_STAND_ALONE="false" />
#!     <INFO NAME="FeatureListFile" IS_STAND_ALONE="true" />
#!     <INFO NAME="InData" IS_STAND_ALONE="true" />
#!     <INFO NAME="IsWholeProcessRun" IS_STAND_ALONE="true" />
#!     <INFO NAME="OutputDirectory" IS_STAND_ALONE="true" />
#!     <INFO NAME="ProcessModulName" IS_STAND_ALONE="true" />
#!     <INFO NAME="ProcessName" IS_STAND_ALONE="true" />
#!     <INFO NAME="RotDirectory" IS_STAND_ALONE="true" />
#! </PARAMETER_INFO>
#! </USER_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="16"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Plockar bort kommentarer och tomma rader&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="906.25900000000001 86.292100000000005"
#!   TOP_LEFT="906.25900000000001 86.292100000000005"
#!   BOTTOM_RIGHT="1731.2667500775008 87.292100000000005"
#!   BOUNDING_RECT="906.25900000000001 86.292100000000005 825.00775007750076 -1"
#!   ORDER="500000000000000"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   CUSTOM_USER_COLOR="false"
#!   COLOUR="1,1,0.95686274509803926,0.78431372549019607"
#!   SIZE_POLICY="8"
#!   ANCHORED_NODE="12"
#! />
#! <COMMENT
#!   IDENTIFIER="64"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Parametrar&lt;/span&gt;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;* [RotDirectory] Kommer från batch-processen och är obligatoriskt för alla FME-processor.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;* [ProcessName] Kommer från batch-processen och är obligatoriskt för alla FME-processor.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;* [OutputDirectory] Katalogsökväg för nedladdad geodata.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;* [ProcessModulName] Kommer från batch-processen och är obligatoriskt för alla FME-processor.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;* [IsWholeProcessRun] Signal om datalager-processen är körd i sin helhet eller ej.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-1108.6500000000001 517.56200000000001"
#!   TOP_LEFT="-1108.6500000000001 517.56200000000001"
#!   BOTTOM_RIGHT="1154.1100000000001 243.81"
#!   BOUNDING_RECT="-1108.6500000000001 517.56200000000001 2262.7600000000002 273.75200000000001"
#!   ORDER="500000000000000"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   CUSTOM_USER_COLOR="false"
#!   COLOUR="1,1,0.95686274509803926,0.78431372549019607"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! <COMMENT
#!   IDENTIFIER="95"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Kontrollerar för protokoll HTTP&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;i URI&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="3400.0300000000002 -671.25699999999995"
#!   TOP_LEFT="3400.0300000000002 -671.25699999999995"
#!   BOTTOM_RIGHT="3996.9104688046882 -670.25699999999995"
#!   BOUNDING_RECT="3400.0300000000002 -671.25699999999995 596.88046880468801 -1"
#!   ORDER="500000000000000"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   CUSTOM_USER_COLOR="false"
#!   COLOUR="1,1,0.95686274509803926,0.78431372549019607"
#!   SIZE_POLICY="8"
#!   ANCHORED_NODE="24"
#! />
#! <COMMENT
#!   IDENTIFIER="154"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Klipper bort från datasets&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;katalogtravasering om sådan existerar&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1231.97 494.54599999999999"
#!   TOP_LEFT="1231.97 494.54599999999999"
#!   BOTTOM_RIGHT="1944.4766250662506 495.54599999999999"
#!   BOUNDING_RECT="1231.97 494.54599999999999 712.50662506625065 -1"
#!   ORDER="500000000000000"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   CUSTOM_USER_COLOR="false"
#!   COLOUR="1,1,0.95686274509803926,0.78431372549019607"
#!   SIZE_POLICY="8"
#!   ANCHORED_NODE="156"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! <BOOKMARK
#!   IDENTIFIER="148"
#!   NAME="Loggning"
#!   DESCRIPTION=""
#!   TOP_LEFT="-1272.72 -1539.3699999999999"
#!   ORDER="500000000000000"
#!   PALETTE_COLOR=""
#!   BOTTOM_RIGHT="7217.814113625006 -2938.02"
#!   BOUNDING_RECT="-1272.72 -1539.3699999999999 8490.5341136250063 1398.6500000000001"
#!   STICKY="true"
#!   COLOUR="0.74117647058823533,0.4392156862745098,0.60392156862745094,0.39215686274509803"
#!   CONTENTS="182 179 192 199 80 118 121 194 100 136 150 134 119 139 146 135 195 131 123 126 196 132 129 128 104 183 184 71 185 120 130 145 191 180 65 178 149 133 108 114 73 198 111 96 186 82 144 181 66 200 97 177 147 197 193 187 74 115 138 188 141 99 190 "
#! >
#! </BOOKMARK>
#! <BOOKMARK
#!   IDENTIFIER="172"
#!   NAME="Absolut och relativ sökväg för col1 och col2"
#!   DESCRIPTION=""
#!   TOP_LEFT="2188.27 272.41500000000002"
#!   ORDER="500000000000000"
#!   PALETTE_COLOR=""
#!   BOTTOM_RIGHT="3320.0900000000001 -1126.2250000000001"
#!   BOUNDING_RECT="2188.27 272.41500000000002 1131.8199999999999 1398.6400000000001"
#!   STICKY="true"
#!   COLOUR="0.011764705882352941,0.32941176470588235,0.21176470588235294,0.39215686274509803"
#!   CONTENTS="167 169 171 164 168 157 158 151 170 161 162 155 165 163 166 160 159 "
#! >
#! </BOOKMARK>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="HTTPCaller"
#!   VERSION="3"
#!   POSITION="4983.0600000000004 -990.00999999999999"
#!   BOUNDING_RECT="4983.0600000000004 -990.00999999999999 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADDITIONAL_PARAMETERS_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="ADDITIONAL_URL_PARAMETERS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_REQUEST_PARAMETERS" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_RESPONSE_PARAMETERS" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="AUTH_METHOD" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AUTH_NAMED_CONNECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AUTH_PASSWORD" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AUTH_USERNAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCURRENCY_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="CONNECTION_TIMEOUT_LENGTH" PARM_VALUE="60"/>
#!     <XFORM_PARM PARM_NAME="CUSTOM_HEADERS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CUSTOM_HEADERS_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="ERROR_ATTR" PARM_VALUE="_error"/>
#!     <XFORM_PARM PARM_NAME="FILE_PATH_ATTR" PARM_VALUE="_response_file_path"/>
#!     <XFORM_PARM PARM_NAME="FILE_TYPE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="FOLLOW_REDIRECTS" PARM_VALUE="FOLLOW_WITH_ORIGINAL_METHOD"/>
#!     <XFORM_PARM PARM_NAME="HTTPURL_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="HTTP_AUTH_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="HTTP_METHOD" PARM_VALUE="GET"/>
#!     <XFORM_PARM PARM_NAME="HTTP_RESPONSE_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LOOP_MESSAGE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MAX_HTTP_VERSION" PARM_VALUE="HTTP_2"/>
#!     <XFORM_PARM PARM_NAME="MAX_TRANSFERS_IN_PROGRESS" PARM_VALUE="25"/>
#!     <XFORM_PARM PARM_NAME="MULTIPARTS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MULTIPART_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_DIRNAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_FILENAME" PARM_VALUE="@Value(_put_file)"/>
#!     <XFORM_PARM PARM_NAME="REDIRECT_AUTH" PARM_VALUE="ORIGINAL_DOMAIN_ONLY"/>
#!     <XFORM_PARM PARM_NAME="RESPONSE_FILE_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="RESPONSE_HEADER_LIST_ATTR" PARM_VALUE="_headers"/>
#!     <XFORM_PARM PARM_NAME="SAVE_FILE" PARM_VALUE="File"/>
#!     <XFORM_PARM PARM_NAME="SAVE_MULTI" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="STATUS_CODE_ATTR" PARM_VALUE="_http_status_code"/>
#!     <XFORM_PARM PARM_NAME="TARGET_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TARGET_ATTR_ENCODING" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TARGET_URL" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;_get_file&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFER_TIMEOUT_LENGTH" PARM_VALUE="90"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="UPLOAD_BODY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="UPLOAD_CONTENT_TYPE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="UPLOAD_FILE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="UPLOAD_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="UPLOAD_TYPE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="USE_COOKIES" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="VERIFY_SSL_CERTIFICATES" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="HTTPCaller"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="Creator"
#!   VERSION="5"
#!   POSITION="-854.88400000000001 -42.458599999999997"
#!   BOUNDING_RECT="-854.88400000000001 -42.458599999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="CREATED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATEND" PARM_VALUE="no"/>
#!     <XFORM_PARM PARM_NAME="COORDS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="COORDSYS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CRE_ATTR" PARM_VALUE="_creation_instance"/>
#!     <XFORM_PARM PARM_NAME="GEOM" PARM_VALUE="&lt;lt&gt;?xml&lt;space&gt;version=&lt;quote&gt;1.0&lt;quote&gt;&lt;space&gt;encoding=&lt;quote&gt;US_ASCII&lt;quote&gt;&lt;space&gt;standalone=&lt;quote&gt;no&lt;quote&gt;&lt;space&gt;?&lt;gt&gt;&lt;lt&gt;geometry&lt;space&gt;dimension=&lt;quote&gt;2&lt;quote&gt;&lt;gt&gt;&lt;lt&gt;null&lt;solidus&gt;&lt;gt&gt;&lt;lt&gt;&lt;solidus&gt;geometry&lt;gt&gt;"/>
#!     <XFORM_PARM PARM_NAME="GEOMTYPE" PARM_VALUE="Geometry Object"/>
#!     <XFORM_PARM PARM_NAME="NUM" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Creator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="FeatureReader"
#!   VERSION="13"
#!   POSITION="-239.25299999999999 -42.458599999999997"
#!   BOUNDING_RECT="-239.25299999999999 -42.458599999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="&lt;SCHEMA&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_feature_type_name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="attribute{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="attribute{}.fme_data_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="attribute{}.native_data_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_format_short_name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_format_long_name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_schema_handling" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="CSV"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="&lt;OTHER&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <OUTPUT_FEAT NAME="INITIATOR"/>
#!     <FEAT_COLLAPSED COLLAPSED="3"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="_matched_records" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="4"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTES" PARM_VALUE="CSV,&quot;col0,col1,col2,col3&quot;"/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_TYPES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRS_TO_EXPOSE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_MODE" PARM_VALUE="Only Use Result"/>
#!     <XFORM_PARM PARM_NAME="ATTR_CONFLICT_RES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ATTR_IGNORE_NULLS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ATTR_PREFIX" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AVAILABLE_FEATURE_TYPES" PARM_VALUE="_FEATUREREADER_OPTIONAL_FTTR_%CSV"/>
#!     <XFORM_PARM PARM_NAME="CACHE_TIMEOUT_HRS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="COMBINE_GEOM" PARM_VALUE="Use Result"/>
#!     <XFORM_PARM PARM_NAME="CONSTRAINTS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COORDSYS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_ADVANCED_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="CSV2_CASE_SENSITIVE_FIELD_NAMES" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="CSV2_CSV2_EXPOSE_FORMAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_DATASET_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_DATA_START_LINE" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="CSV2_DELIMITER" PARM_VALUE="|"/>
#!     <XFORM_PARM PARM_NAME="CSV2_ENCODING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_ENCODING_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_ENFORCE_STRICT_SCHEMA" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_EXPOSE_ATTRS_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="CSV2_FEATURE_TYPE_NAME" PARM_VALUE="FORMAT_NAME"/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELDS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_NAMES_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_NAMES_LINE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_QUALIFIER_CHARACTER" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_QUALIFIER_ESCAPE_CHARACTER" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_SEPARATION_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_FIELD_VALUES_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_PRESERVE_SOURCE_ENCODING" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_PREVIEW_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_PREVIEW_PLACEHOLDER" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_READ_SKIPPED_LINES" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCAN_ADDITIONAL_FIELDS" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCAN_MAX_ROWS" PARM_VALUE="1000"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCAN_TYPES" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCHEMA" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCHEMA_GENERATION_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SCHEMA_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CSV2_SKIPPED_LINES_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="CSV2_SKIP_DUPLICATE_DELIMITERS" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="CSV2_TRIM_FIELD_NAME_QUALIFIERS" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="CSV2_TRIM_FIELD_VALUE_QUALIFIERS" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="CSV2_USE_CUSTOM_SCHEMA" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="DATASET" PARM_VALUE="$(RotDirectory)$(ProcessName)&lt;solidus&gt;_schema&lt;solidus&gt;$(FeatureListFile)"/>
#!     <XFORM_PARM PARM_NAME="DYNGROUP_0" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ENABLE_CACHE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="FEATURETYPES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="FORCE_REFRESH_OUTPUTS" PARM_VALUE="no"/>
#!     <XFORM_PARM PARM_NAME="FORMAT" PARM_VALUE="CSV2"/>
#!     <XFORM_PARM PARM_NAME="FORMAT_ATTRIBUTE_TYPES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="FORMAT_DIRECTIVES" PARM_VALUE="METAFILE,CSV2"/>
#!     <XFORM_PARM PARM_NAME="FORMAT_PARAMS" PARM_VALUE="CSV2_ENCODING,&quot;OPTIONAL STRING_OR_ENCODING fme-system%*&quot;,CSV2&lt;space&gt;Character&lt;space&gt;Encoding:,CSV2_FIELDS_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_OPEN%DELIMITER%FIELD_NAMES_LINE%DATA_START_LINE&quot;,CSV2&lt;space&gt;Fields,CSV2_FIELD_VALUES_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%TRIM_FIELD_VALUE_QUALIFIERS%READ_EMPTY_VALUES_AS&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Values,CSV2_FIELD_QUALIFIER_CHARACTER,&quot;OPTIONAL STRING_ENCODED&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Qualifier&lt;space&gt;Character:,CSV2_DELIMITER,&quot;OPTIONAL STRING_OR_CHOICE_ENCODED auto%,%;%|%space%tab&quot;,CSV2&lt;space&gt;Delimiter&lt;space&gt;Character:,CSV2_SCHEMA,&quot;OPTIONAL GUI_LINE_TABLE NO_MOVE%NO_ADD%NO_LABEL%ROW_DELIM:;%COL_DELIM:,%STRETCH_COL:1%COL_DISPLAY_ORDER:2,0,1%&quot;&quot;Name&quot;&quot;%&quot;&quot;STRING_READONLY_ENCODED ATTRIBUTE_NAME&quot;&quot;%&quot;&quot;Type&quot;&quot;%&quot;&quot;LOOKUP_CHOICE TYPE boolean%int8%int16%int32%int64%uint8%uint16%uint32%uint64%real32%real64%string%x_coord,x_coordinate%y_coord,y_coordinate%z_coord,z_coordinate&quot;&quot;%&quot;&quot;Read&quot;&quot;%&quot;&quot;CHECKBOX READ YES%NO&quot;&quot;&quot;,CSV2&lt;space&gt;Attributes:,CSV2_ENFORCE_STRICT_SCHEMA,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Enforce&lt;space&gt;Strict&lt;space&gt;Schema:,CSV2_TRIM_FIELD_NAME_QUALIFIERS,&quot;OPTIONAL NO_EDIT TEXT&quot;,CSV2&lt;space&gt;,CSV2_CASE_SENSITIVE_FIELD_NAMES,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Case&lt;space&gt;Sensitive&lt;space&gt;Field&lt;space&gt;Names:,CSV2_USE_CUSTOM_SCHEMA,&quot;OPTIONAL RADIO_GROUP 2%Automatic,NO%Manual,YES&quot;,CSV2&lt;space&gt;Attribute&lt;space&gt;Definition,CSV2_TRIM_FIELD_VALUE_QUALIFIERS,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Trim&lt;space&gt;Field&lt;space&gt;Qualifier&lt;space&gt;Characters:,CSV2_FIELD_NAMES_LINE,&quot;OPTIONAL INT_OR_CHOICE None%1%2%3%4%5&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Names&lt;space&gt;Line:,CSV2_DATA_START_LINE,&quot;OPTIONAL RANGE_SLIDER 1%MAX%0&quot;,CSV2&lt;space&gt;Data&lt;space&gt;Start&lt;space&gt;Line:,CSV2_ADVANCED_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%FIELD_SEPARATION_GROUP%FIELD_NAMES_GROUP%FIELD_VALUES_GROUP%ENCODING_GROUP%SKIPPED_LINES_GROUP%SCHEMA_GENERATION_GROUP&quot;,CSV2&lt;space&gt;Advanced,CSV2_FIELD_SEPARATION_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%SKIP_DUPLICATE_DELIMITERS%FIELD_QUALIFIER_CHARACTER%FIELD_QUALIFIER_ESCAPE_CHARACTER&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Separation,CSV2_FEATURE_TYPE_NAME,&quot;OPTIONAL LOOKUP_CHOICE From&lt;space&gt;Format&lt;space&gt;Name,FORMAT_NAME%From&lt;space&gt;File&lt;space&gt;Name&lt;openparen&gt;s&lt;closeparen&gt;,FILE_NAME&quot;,CSV2&lt;space&gt;Feature&lt;space&gt;Type&lt;space&gt;Name&lt;openparen&gt;s&lt;closeparen&gt;:,CSV2_PREVIEW_PLACEHOLDER,&quot;OPTIONAL GUI_LINE_TABLE NO_LABEL%&quot;&quot;&quot;&quot;%STRING&quot;,CSV2&lt;space&gt;Preview,CSV2_FIELD_QUALIFIER_ESCAPE_CHARACTER,&quot;OPTIONAL STRING_ENCODED&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Qualifier&lt;space&gt;Escape&lt;space&gt;Character:,CSV2_PREVIEW_GROUP,&quot;OPTIONAL NAMEDGROUP PREVIEW_PLACEHOLDER&quot;,CSV2&lt;space&gt;Preview,CSV2_DATASET_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_OPEN%FEATURE_TYPE_NAME&quot;,CSV2&lt;space&gt;Dataset&lt;space&gt;Parameters,CSV2_PRESERVE_SOURCE_ENCODING,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Preserve&lt;space&gt;Source&lt;space&gt;Encoding:,CSV2_SCAN_TYPES,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Scan&lt;space&gt;for&lt;space&gt;Types:,CSV2_SCHEMA_GENERATION_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%SCAN_MAX_ROWS%SCAN_TYPES%SCAN_ADDITIONAL_FIELDS&quot;,CSV2&lt;space&gt;Schema&lt;space&gt;Generation,CSV2_ENCODING_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%ENCODING%PRESERVE_SOURCE_ENCODING&quot;,CSV2&lt;space&gt;Encoding,CSV2_CSV2_EXPOSE_FORMAT_ATTRS,&quot;OPTIONAL LITERAL EXPOSED_ATTRS CSV2%Source&quot;,CSV2&lt;space&gt;Additional&lt;space&gt;Attributes&lt;space&gt;to&lt;space&gt;Expose:,CSV2_SCAN_MAX_ROWS,&quot;OPTIONAL INTEGER&quot;,CSV2&lt;space&gt;Maximum&lt;space&gt;Rows&lt;space&gt;to&lt;space&gt;Scan:,CSV2_EXPOSE_ATTRS_GROUP,&quot;OPTIONAL DISCLOSUREGROUP CSV2_EXPOSE_FORMAT_ATTRS&quot;,CSV2&lt;space&gt;Schema&lt;space&gt;Attributes,CSV2_READ_SKIPPED_LINES,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Read&lt;space&gt;Skipped&lt;space&gt;Lines:,CSV2_SCHEMA_GROUP,&quot;OPTIONAL NAMEDGROUP USE_CUSTOM_SCHEMA%SCHEMA&quot;,CSV2&lt;space&gt;Attributes,CSV2_SKIPPED_LINES_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%READ_SKIPPED_LINES&quot;,CSV2&lt;space&gt;Skipped&lt;space&gt;Lines,CSV2_SKIP_DUPLICATE_DELIMITERS,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Skip&lt;space&gt;Duplicate&lt;space&gt;Delimiters:,CSV2_SCAN_ADDITIONAL_FIELDS,&quot;OPTIONAL CHOICE Yes%No&quot;,CSV2&lt;space&gt;Scan&lt;space&gt;for&lt;space&gt;Additional&lt;space&gt;Fields:,CSV2_FIELD_NAMES_GROUP,&quot;OPTIONAL DISCLOSUREGROUP FME_DISCLOSURE_CLOSED%CASE_SENSITIVE_FIELD_NAMES%ENFORCE_STRICT_SCHEMA%TRIM_FIELD_NAME_WHITESPACE&quot;,CSV2&lt;space&gt;Field&lt;space&gt;Names"/>
#!     <XFORM_PARM PARM_NAME="FTTR_SEPARATOR" PARM_VALUE="SPACE"/>
#!     <XFORM_PARM PARM_NAME="GENERIC_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="INTERACT" PARM_VALUE="NONE"/>
#!     <XFORM_PARM PARM_NAME="MAX_FEATURES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MERGE_HANDLING_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="OUTPUTPORTS_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_FEATURES_DISPLAY" PARM_VALUE="Data Features"/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_FEATURES_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="OUTPUT_PORTS_MODE" PARM_VALUE="PORTS_FROM_FTTR"/>
#!     <XFORM_PARM PARM_NAME="PORTS_FROM_FTTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="READER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="READ_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SELECTED_PORTS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SINGLE_PORT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SUPPORTED_SPATIAL_INTERACTIONS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WHERE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FeatureReader"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="12"
#!   TYPE="Tester"
#!   VERSION="3"
#!   POSITION="930.25900000000001 -42.458599999999997"
#!   BOUNDING_RECT="930.25900000000001 -42.458599999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="COMPOSITE"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_MSG" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="1 OR (( 2 OR 3 ) AND ( 4 OR 5 OR 6 ) AND ( 7 OR 8 OR 9 ) AND ( 10 OR 11 OR 12 ))"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;col0&lt;closeparen&gt; BEGINS_WITH &lt;semicolon&gt;&#10;TEST col0 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col0 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col1 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col1 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col1 ATTRIBUTE_IS_MISSING &quot;&quot;&#10;TEST col2 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col2 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col2 ATTRIBUTE_IS_MISSING &quot;&quot;&#10;TEST col3 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col3 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col3 ATTRIBUTE_IS_MISSING &quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="TEST"/>
#!     <XFORM_PARM PARM_NAME="TEST_PREVIEW_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="28"
#!   TYPE="AttributeCreator"
#!   VERSION="9"
#!   POSITION="1589.6400000000001 -42.458599999999997"
#!   BOUNDING_RECT="1589.6400000000001 -42.458599999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_HANDLING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="&quot;&quot; _col1_absolute_path SET_TO   _col2_absolute_path SET_TO "/>
#!     <XFORM_PARM PARM_NAME="MULTI_FEATURE_MODE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_MODE_DISPLAY" PARM_VALUE="No Substitution"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_VALUE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_PRIOR_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_SUBSEQUENT_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCreator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="24"
#!   TYPE="Tester"
#!   VERSION="3"
#!   POSITION="3445.9099999999999 -843.75800000000004"
#!   BOUNDING_RECT="3445.9099999999999 -843.75800000000004 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_MSG" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="1 OR 2"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;col1&lt;closeparen&gt; BEGINS_WITH http:&lt;solidus&gt;&lt;solidus&gt;&#10;TEST &lt;at&gt;Value&lt;openparen&gt;col1&lt;closeparen&gt; BEGINS_WITH https:&lt;solidus&gt;&lt;solidus&gt;"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="TEST"/>
#!     <XFORM_PARM PARM_NAME="TEST_PREVIEW_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="36"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="4039.6700000000001 -843.75800000000004"
#!   BOUNDING_RECT="4039.6700000000001 -843.75800000000004 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;col1&lt;closeparen&gt;&lt;at&gt;Value&lt;openparen&gt;col0&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="_get_file"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="40"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="4037.54 -1050.01"
#!   BOUNDING_RECT="4037.54 -1050.01 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;col2&lt;closeparen&gt;&lt;at&gt;Value&lt;openparen&gt;col0&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="_put_file"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="45"
#!   TYPE="ParameterFetcher"
#!   VERSION="4"
#!   POSITION="-850.94399999999996 -304.41899999999998"
#!   BOUNDING_RECT="-850.94399999999996 -304.41899999999998 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="RotDirectory $(RotDirectory) ProcessName $(ProcessName) ProcessModulName $(ProcessModulName)"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="46"
#!   TYPE="UUIDGenerator"
#!   VERSION="0"
#!   POSITION="-854.88400000000001 -535.71199999999999"
#!   BOUNDING_RECT="-854.88400000000001 -535.71199999999999 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17259"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="UUID_ATTR" PARM_VALUE="ProcessID"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="UUIDGenerator_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="56"
#!   TYPE="FeatureMerger"
#!   VERSION="19"
#!   POSITION="356.08943093009884 -42.458599999999997"
#!   BOUNDING_RECT="356.08943093009884 -42.458599999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="MERGED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="UNMERGED_REQUESTOR"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="USED_SUPPLIER"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="numReferences" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <OUTPUT_FEAT NAME="UNUSED_SUPPLIER"/>
#!     <FEAT_COLLAPSED COLLAPSED="3"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="3" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="4"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="4" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_MODE" PARM_VALUE="Merge Supplier"/>
#!     <XFORM_PARM PARM_NAME="ATTR_CONFLICT_RES" PARM_VALUE="Use Requestor"/>
#!     <XFORM_PARM PARM_NAME="CLEANING_TOLERANCE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONNECT_Z_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_TYPE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="IGNORE_NULLS" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="JOIN_ATTRIBUTES_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="JOIN_KEYS" PARM_VALUE="1 1 AUTO"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MERGE_COUNT_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MERGE_TYPE" PARM_VALUE="Attributes Only"/>
#!     <XFORM_PARM PARM_NAME="MODE_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="PROCESS_DUPS" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="REJECT_NULL_MISSING_KEYS" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="SUPPLIERS_FIRST" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="SUPPLIER_PREFIX" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FeatureMerger"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="65"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="-1048.6800000000001 -2041.72"
#!   BOUNDING_RECT="-1048.6800000000001 -2041.72 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="K&lt;u00f6&gt;r&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;&lt;space&gt;f&lt;u00f6&gt;r&lt;space&gt;nedladdning&lt;space&gt;av&lt;space&gt;data&lt;space&gt;definierad&lt;space&gt;i&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;till&lt;space&gt;datalagret."/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_5"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="66"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="-1048.6800000000001 -2487.73"
#!   BOUNDING_RECT="-1048.6800000000001 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;,EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,INFORMATION,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;,EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="71"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="-97.654200000000003 -2487.73"
#!   BOUNDING_RECT="-97.654200000000003 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;,EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,ERROR,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;,EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="73"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="777.18799999999999 -2041.72"
#!   BOUNDING_RECT="777.18799999999999 -2041.72 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;dataset&lt;space&gt;har&lt;space&gt;av&lt;space&gt;ok&lt;u00e4&gt;nd&lt;space&gt;anledning&lt;space&gt;inte&lt;space&gt;lyckats&lt;space&gt;att&lt;space&gt;l&lt;u00e4&gt;nkas&lt;space&gt;till&lt;space&gt;initierare&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;transformern&lt;space&gt;Creator.&lt;space&gt;Sp&lt;u00e5&gt;rning&lt;space&gt;ej&lt;space&gt;m&lt;u00f6&gt;jlig."/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_6"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="74"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="774.37800000000004 -2487.73"
#!   BOUNDING_RECT="774.37800000000004 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,$(ProcessName),EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,ERROR,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,$(RotDirectory),EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_4"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="80"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="777.18799999999999 -1668.2"
#!   BOUNDING_RECT="777.18799999999999 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;&lt;space&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="82"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="-113.959 -2041.72"
#!   BOUNDING_RECT="-113.959 -2041.72 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;poster&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;avslogs.&lt;space&gt;Fel:&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;_reader_error&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_8"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="126"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="-97.654200000000003 -1668.2"
#!   BOUNDING_RECT="-97.654200000000003 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="119"
#!   TYPE="AttributeCreator"
#!   VERSION="9"
#!   POSITION="768.60599999999999 -1898.1700000000001"
#!   BOUNDING_RECT="768.60599999999999 -1898.1700000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_HANDLING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="&quot;&quot; ProcessID SET_TO OK&lt;u00c4&gt;ND"/>
#!     <XFORM_PARM PARM_NAME="MULTI_FEATURE_MODE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_MODE_DISPLAY" PARM_VALUE="No Substitution"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_VALUE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_PRIOR_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_SUBSEQUENT_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCreator_7"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="108"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="1665.1700000000001 -2487.73"
#!   BOUNDING_RECT="1665.1700000000001 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;,EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,ERROR,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;,EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_7"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="114"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="1692.3399999999999 -2036.8800000000001"
#!   BOUNDING_RECT="1692.3399999999999 -2036.8800000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;poster&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;avslogs&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;att&lt;space&gt;l&lt;u00e4&gt;nkas&lt;space&gt;till&lt;space&gt;initieraren&lt;space&gt;transformern&lt;space&gt;Creator.&lt;space&gt;Fel:&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;fme_rejection_code&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_9"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="130"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="1667.45 -1668.2"
#!   BOUNDING_RECT="1667.45 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="138"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="2562.8899999999999 -2055.2399999999998"
#!   BOUNDING_RECT="2562.8899999999999 -2055.2399999999998 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;poster&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;har&lt;space&gt;filtrerats&lt;space&gt;bort&lt;space&gt;p.g.a.&lt;space&gt;avsaknade&lt;space&gt;v&lt;u00e4&gt;rden&lt;space&gt;eller&lt;space&gt;borkommentering."/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_11"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="141"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="2587.25 -2487.73"
#!   BOUNDING_RECT="2587.25 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,$(ProcessName),EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,VARNING,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,$(RotDirectory),EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_8"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="118"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="2615.77 -1668.2"
#!   BOUNDING_RECT="2615.77 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_4"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="96"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="3467.4099999999999 -2041.6500000000001"
#!   BOUNDING_RECT="3467.4099999999999 -2041.6500000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;har&lt;space&gt;ej&lt;space&gt;fungerande&lt;space&gt;URI&lt;space&gt;f&lt;u00f6&gt;r&lt;space&gt;nedladdning."/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_7"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="97"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="3467.4099999999999 -2487.73"
#!   BOUNDING_RECT="3467.4099999999999 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,$(ProcessName),EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,VARNING,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,$(RotDirectory),EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_5"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="99"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="3487.6900000000001 -1668.2"
#!   BOUNDING_RECT="3487.6900000000001 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_5"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="104"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="4466.1300000000001 -2487.73"
#!   BOUNDING_RECT="4466.1300000000001 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;,EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,ERROR,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;,EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_6"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="111"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="4490.5900000000001 -2047.75"
#!   BOUNDING_RECT="4490.5900000000001 -2047.75 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;dataset&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;avslogs&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;att&lt;space&gt;laddas&lt;space&gt;ner&lt;space&gt;genom&lt;space&gt;transformern&lt;space&gt;HTTPCaller.&lt;space&gt;Felkod&lt;space&gt;FME:&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;_error&lt;closeparen&gt;.&lt;space&gt;HTTP-statuskod:&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;_http_status_code&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_10"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="115"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="4468.4099999999999 -1668.2"
#!   BOUNDING_RECT="4468.4099999999999 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_6"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="123"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="6373.9555915000001 -2047.0899999999997"
#!   BOUNDING_RECT="6373.9555915000001 -2047.0899999999997 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;laddats&lt;space&gt;ner."/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_12"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="133"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="6371.1455915000006 -2487.73"
#!   BOUNDING_RECT="6371.1455915000006 -2487.73 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,$(ProcessName),EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,KLART,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,$(RotDirectory),EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_9"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="139"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="6399.6655915000001 -1668.2"
#!   BOUNDING_RECT="6399.6655915000001 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_7"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="156"
#!   TYPE="StringReplacer"
#!   VERSION="5"
#!   POSITION="1312.22 322.04500000000002"
#!   BOUNDING_RECT="1312.22 322.04500000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="CASE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="FIND_TEXT" PARM_VALUE="&lt;backslash&gt;&lt;solidus&gt;&lt;backslash&gt;*&lt;backslash&gt;*&lt;backslash&gt;&lt;solidus&gt;.*"/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH" PARM_VALUE="_FME_NO_OP_"/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REGEXP" PARM_VALUE="YES"/>
#!     <XFORM_PARM PARM_NAME="REPLACE_TEXT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_ATTRS" PARM_VALUE="col0"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringReplacer"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="151"
#!   TYPE="StringSearcher"
#!   VERSION="4"
#!   POSITION="2273.6999999999998 135.36500000000001"
#!   BOUNDING_RECT="2273.6999999999998 135.36500000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="MATCHED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="NOT_MATCHED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CASE" PARM_VALUE="no"/>
#!     <XFORM_PARM PARM_NAME="MATCHED_PARTS_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MATCHED_RESULT_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MATCHES_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="REGEXP" PARM_VALUE=":"/>
#!     <XFORM_PARM PARM_NAME="STRING_TO_SEARCH" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;col1&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringSearcher_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="155"
#!   TYPE="StringSearcher"
#!   VERSION="4"
#!   POSITION="2287.27 -505.71800000000002"
#!   BOUNDING_RECT="2287.27 -505.71800000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="MATCHED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="NOT_MATCHED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CASE" PARM_VALUE="no"/>
#!     <XFORM_PARM PARM_NAME="MATCHED_PARTS_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MATCHED_RESULT_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="MATCHES_ATTR" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="REGEXP" PARM_VALUE=":"/>
#!     <XFORM_PARM PARM_NAME="STRING_TO_SEARCH" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;col2&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringSearcher_4"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="157"
#!   TYPE="AttributeCreator"
#!   VERSION="9"
#!   POSITION="2809.0799999999999 135.36500000000001"
#!   BOUNDING_RECT="2809.0799999999999 135.36500000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_HANDLING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="&quot;&quot; _col1_absolute_path SET_TO 1"/>
#!     <XFORM_PARM PARM_NAME="MULTI_FEATURE_MODE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_MODE_DISPLAY" PARM_VALUE="No Substitution"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_VALUE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_PRIOR_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_SUBSEQUENT_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCreator_13"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="158"
#!   TYPE="AttributeCreator"
#!   VERSION="9"
#!   POSITION="2822.6500000000001 -487.71800000000002"
#!   BOUNDING_RECT="2822.6500000000001 -487.71800000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_HANDLING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="&quot;&quot; _col2_absolute_path SET_TO 1"/>
#!     <XFORM_PARM PARM_NAME="MULTI_FEATURE_MODE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_MODE_DISPLAY" PARM_VALUE="No Substitution"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_VALUE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_PRIOR_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_SUBSEQUENT_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCreator_14"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="159"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="2287.27 -308.23000000000002"
#!   BOUNDING_RECT="2287.27 -308.23000000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;&lt;at&gt;Value&lt;openparen&gt;ProcessModulName&lt;closeparen&gt;&lt;solidus&gt;&lt;at&gt;Value&lt;openparen&gt;col1&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="col1"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_13"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="160"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="2321.3400000000001 -912.65899999999999"
#!   BOUNDING_RECT="2321.3400000000001 -912.65899999999999 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;&lt;at&gt;Value&lt;openparen&gt;ProcessModulName&lt;closeparen&gt;&lt;solidus&gt;&lt;at&gt;Value&lt;openparen&gt;col2&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="col2"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_14"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="161"
#!   TYPE="Tester"
#!   VERSION="3"
#!   POSITION="2287.27 -83.2166"
#!   BOUNDING_RECT="2287.27 -83.2166 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_MSG" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="1 OR 2 OR 3"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST col1 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col1 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col1 ATTRIBUTE_IS_MISSING &quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="TEST"/>
#!     <XFORM_PARM PARM_NAME="TEST_PREVIEW_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester_13"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="162"
#!   TYPE="Tester"
#!   VERSION="3"
#!   POSITION="2287.27 -710.822"
#!   BOUNDING_RECT="2287.27 -710.822 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_MSG" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="1 OR 2 OR 3"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Across Output Ports"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST col2 ATTRIBUTE_VALUE_NULL &quot;&quot;&#10;TEST col2 ATTRIBUTE_IS_EMPTY &quot;&quot;&#10;TEST col2 ATTRIBUTE_IS_MISSING &quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="TEST"/>
#!     <XFORM_PARM PARM_NAME="TEST_PREVIEW_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester_14"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="177"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="-1048.6800000000001 -2203.23"
#!   BOUNDING_RECT="-1048.6800000000001 -2203.23 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="178"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="-97.654200000000003 -2203.23"
#!   BOUNDING_RECT="-97.654200000000003 -2203.23 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_reader_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="179"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="777.18799999999999 -2203.23"
#!   BOUNDING_RECT="777.18799999999999 -2203.23 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="180"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="1692.3399999999999 -2203.23"
#!   BOUNDING_RECT="1692.3399999999999 -2203.23 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_4"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="120"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="2578.8299999999999 -2209.2600000000002"
#!   BOUNDING_RECT="2578.8299999999999 -2209.2600000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_5"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="132"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="3487.6900000000001 -2203.23"
#!   BOUNDING_RECT="3487.6900000000001 -2203.23 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_6"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="188"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="4466.1300000000001 -2209.2600000000002"
#!   BOUNDING_RECT="4466.1300000000001 -2209.2600000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_7"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="194"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="6373.9555915000001 -2209.2600000000002"
#!   BOUNDING_RECT="6373.9555915000001 -2209.2600000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_8"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="142"
#!   TYPE="Tester"
#!   VERSION="3"
#!   POSITION="5709.2013038125006 -990.00999999999999"
#!   BOUNDING_RECT="5709.2013038125006 -990.00999999999999 454 71"
#!   ORDER="500000000000001"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_MSG" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_FEATURE_ORDER" PARM_VALUE="Per Output Port"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;_http_status_code&lt;closeparen&gt; = 200"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="TEST"/>
#!     <XFORM_PARM PARM_NAME="TEST_PREVIEW_GROUP" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="150"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="5466.9850489746141 -2487.7300000000005"
#!   BOUNDING_RECT="5466.9850489746141 -2487.7300000000005 658.88800000000003 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;OPTIONAL&lt;space&gt;DATETIME_OR_ATTR&lt;space&gt;EX_DATE_TIME&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;date&lt;space&gt;time: GUI&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_PROCESS_NAME&lt;space&gt;Processnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_ID&lt;space&gt;Process&lt;space&gt;ID: GUI&lt;space&gt;OPTIONAL&lt;space&gt;CHOICE_OR_ATTR&lt;space&gt;EX_TYPE&lt;space&gt;INFORMATION%KLART%VARNING%ERROR%OK&lt;u00c4&gt;ND&lt;space&gt;Exception&lt;space&gt;type: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_EDIT_OR_NUM_MULTI_FEATURE_OR_ATTR&lt;space&gt;EX&lt;space&gt;&lt;quote&gt;&lt;space&gt;&lt;quote&gt;&lt;space&gt;Exception&lt;space&gt;message: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;EX_WorkSpace&lt;space&gt;Workspace&lt;space&gt;med&lt;space&gt;s&lt;u00f6&gt;kv&lt;u00e4&gt;g: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_PROCESS_MODUL_NAME&lt;space&gt;Processmodulsnamn: GUI&lt;space&gt;OPTIONAL&lt;space&gt;TEXT_OR_ATTR&lt;space&gt;IsWholeProcessRun&lt;space&gt;&lt;u00c4&gt;r&lt;space&gt;hela&lt;space&gt;datalagerprocessen&lt;space&gt;k&lt;u00f6&gt;rd: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;NAMEDGROUP&lt;space&gt;FME_USER_PARAM_PRIVATE_GRP&lt;space&gt;Destination_exc_file%Destination_exc_file_local%Destination_log_file%Destination_log_file_sqlite%EX_ROT_DIRECTORY_2&lt;space&gt;Private&lt;space&gt;Parameters GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_exc_file_local&lt;space&gt;Text&lt;solidus&gt;Compressed_Text_Files&lt;openparen&gt;*.txt&lt;semicolon&gt;*.txt.gz&lt;closeparen&gt;|*.txt&lt;semicolon&gt;*.txt.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Text_Files&lt;openparen&gt;*.txt.gz&lt;closeparen&gt;|*.txt.gz|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;exceptionfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file&lt;space&gt;Excel_Files&lt;openparen&gt;*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls&lt;closeparen&gt;|*.xlsx&lt;semicolon&gt;*.xlsm&lt;semicolon&gt;*.xls|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;FILENAME&lt;space&gt;Destination_log_file_sqlite&lt;space&gt;SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite&lt;closeparen&gt;|*.sl3&lt;semicolon&gt;*.db&lt;semicolon&gt;*.sqlite|SQLite_Database_Files&lt;openparen&gt;*.sl3&lt;closeparen&gt;|*.sl3|SQLite_Database_Files&lt;openparen&gt;*.db&lt;closeparen&gt;|*.db|SQLite_Database_Files&lt;openparen&gt;*.sqlite&lt;closeparen&gt;|*.sqlite|All_files&lt;openparen&gt;*&lt;closeparen&gt;|*&lt;space&gt;S&lt;u00f6&gt;kv&lt;u00e4&gt;g&lt;space&gt;loggfil: GUI&lt;space&gt;IGNORE&lt;space&gt;OPTIONAL&lt;space&gt;TEXT&lt;space&gt;EX_ROT_DIRECTORY_2&lt;space&gt;Katalogen&lt;space&gt;d&lt;u00e4&gt;r&lt;space&gt;processen&lt;space&gt;startar:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)_logg.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="EX_DATE_TIME,&lt;at&gt;Value&lt;openparen&gt;_datetimestamp&lt;closeparen&gt;,EX_PROCESS_NAME,&lt;at&gt;Value&lt;openparen&gt;ProcessName&lt;closeparen&gt;,EX_ID,&lt;at&gt;Value&lt;openparen&gt;ProcessID&lt;closeparen&gt;,EX_TYPE,ERROR,EX,&lt;at&gt;Value&lt;openparen&gt;Logg&lt;closeparen&gt;,EX_WorkSpace,$(FME_MF_DIR_USERTYPED)$(FME_MF_NAME),EX_ROT_DIRECTORY,&lt;at&gt;Value&lt;openparen&gt;RotDirectory&lt;closeparen&gt;,EX_PROCESS_MODUL_NAME,$(ProcessModulName),IsWholeProcessRun,$(IsWholeProcessRun)"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Logg_10"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="192"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="5491.4450489746141 -2047.7500000000002"
#!   BOUNDING_RECT="5491.4450489746141 -2047.7500000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="fme_basicstring:13%19%9%76%25:&lt;at&gt;Value&lt;openparen&gt;Antal&lt;closeparen&gt;&lt;space&gt;st.&lt;space&gt;dataset&lt;space&gt;fr&lt;u00e5&gt;n&lt;space&gt;&lt;quote&gt;$(InData)&lt;quote&gt;&lt;space&gt;kunde&lt;space&gt;ej&lt;space&gt;laddas&lt;space&gt;ner&lt;space&gt;genom&lt;space&gt;transformern&lt;space&gt;HTTPCaller&lt;space&gt;p.g.a.&lt;space&gt;HTTP-statuskod:&lt;space&gt;&lt;space&gt;&lt;at&gt;Value&lt;openparen&gt;_http_status_code&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="Logg"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="195"
#!   TYPE="Aggregator"
#!   VERSION="15"
#!   POSITION="5469.2650489746138 -1668.2"
#!   BOUNDING_RECT="5469.2650489746138 -1668.2 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="AGGREGATE"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACCUM_ATTRS_NAME" PARM_VALUE="Use Attributes From One Feature"/>
#!     <XFORM_PARM PARM_NAME="AGGREGATE_TYPE" PARM_VALUE="Homogeneous Collection (If Possible)"/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_HIERARCHY_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ASSEMBLE_ONE_LEVEL_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_ACCUM_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="ATTR_TO_TRAIT" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="AV" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CHILD_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="CONCAT_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COUNT_ATTR" PARM_VALUE="Antal"/>
#!     <XFORM_PARM PARM_NAME="CYCLE_ID_ERROR_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GENERATE_LIST_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="GEOM_NAME_FIELD" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_BY_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="GROUP_PROCESSING_GROUP" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="ID_SELECTION" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS_TO_INCLUDE_MODE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MODE" PARM_VALUE="Geometry - Assemble One Level"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARENT_ID_ATTR" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PRESERVE_ID" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="SEP" PARM_VALUE="&lt;comma&gt;"/>
#!     <XFORM_PARM PARM_NAME="SUM" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WEIGHT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Aggregator_8"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="197"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="5466.9850489746141 -2209.2600000000002"
#!   BOUNDING_RECT="5466.9850489746141 -2209.2600000000002 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="21306"
#! >
#!     <OUTPUT_FEAT NAME="Output"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;Rejected&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_col1_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_col2_absolute_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col0" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col1" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col2" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="col3" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="RotDirectory" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessModulName" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="ProcessID" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_get_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_put_file" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.name" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_headers{}.value" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_response_file_path" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_http_status_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Antal" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="Logg" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DTStamperYYYY-MM-DD_HH:MI:SS.sss_9"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="4"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="45"
#!   SOURCE_PORT_DESC="fo 0 CREATED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="143"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="142"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="124"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="118"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="41"
#!   SOURCE_NODE="24"
#!   TARGET_NODE="36"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="173"
#!   SOURCE_NODE="28"
#!   TARGET_NODE="151"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="43"
#!   SOURCE_NODE="36"
#!   TARGET_NODE="40"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="44"
#!   SOURCE_NODE="40"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="50"
#!   SOURCE_NODE="45"
#!   TARGET_NODE="46"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="204"
#!   SOURCE_NODE="46"
#!   TARGET_NODE="56"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 1 SUPPLIER"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS="283 -641"
#! />
#! <FEAT_LINK
#!   IDENTIFIER="203"
#!   SOURCE_NODE="46"
#!   TARGET_NODE="65"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="1"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="202"
#!   SOURCE_NODE="46"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 INITIATOR"
#!   ENABLED="true"
#!   EXECUTION_IDX="2"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="57"
#!   SOURCE_NODE="56"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 MERGED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="183"
#!   SOURCE_NODE="65"
#!   TARGET_NODE="177"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="187"
#!   SOURCE_NODE="73"
#!   TARGET_NODE="179"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="129"
#!   SOURCE_NODE="80"
#!   TARGET_NODE="119"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="185"
#!   SOURCE_NODE="82"
#!   TARGET_NODE="178"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="146"
#!   SOURCE_NODE="96"
#!   TARGET_NODE="132"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="100"
#!   SOURCE_NODE="99"
#!   TARGET_NODE="96"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="134"
#!   SOURCE_NODE="111"
#!   TARGET_NODE="188"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="131"
#!   SOURCE_NODE="114"
#!   TARGET_NODE="180"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="121"
#!   SOURCE_NODE="115"
#!   TARGET_NODE="111"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="145"
#!   SOURCE_NODE="118"
#!   TARGET_NODE="138"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="135"
#!   SOURCE_NODE="119"
#!   TARGET_NODE="73"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="190"
#!   SOURCE_NODE="120"
#!   TARGET_NODE="141"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="147"
#!   SOURCE_NODE="123"
#!   TARGET_NODE="194"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="128"
#!   SOURCE_NODE="126"
#!   TARGET_NODE="82"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="136"
#!   SOURCE_NODE="130"
#!   TARGET_NODE="114"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="191"
#!   SOURCE_NODE="132"
#!   TARGET_NODE="97"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="144"
#!   SOURCE_NODE="138"
#!   TARGET_NODE="120"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="149"
#!   SOURCE_NODE="139"
#!   TARGET_NODE="123"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="189"
#!   SOURCE_NODE="142"
#!   TARGET_NODE="139"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="163"
#!   SOURCE_NODE="151"
#!   TARGET_NODE="157"
#!   SOURCE_PORT_DESC="fo 0 MATCHED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="164"
#!   SOURCE_NODE="155"
#!   TARGET_NODE="158"
#!   SOURCE_PORT_DESC="fo 0 MATCHED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="152"
#!   SOURCE_NODE="156"
#!   TARGET_NODE="28"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="165"
#!   SOURCE_NODE="157"
#!   TARGET_NODE="155"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="174"
#!   SOURCE_NODE="158"
#!   TARGET_NODE="24"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="166"
#!   SOURCE_NODE="159"
#!   TARGET_NODE="155"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="176"
#!   SOURCE_NODE="160"
#!   TARGET_NODE="24"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="167"
#!   SOURCE_NODE="161"
#!   TARGET_NODE="155"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="175"
#!   SOURCE_NODE="162"
#!   TARGET_NODE="24"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="182"
#!   SOURCE_NODE="177"
#!   TARGET_NODE="66"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="184"
#!   SOURCE_NODE="178"
#!   TARGET_NODE="71"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="186"
#!   SOURCE_NODE="179"
#!   TARGET_NODE="74"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="181"
#!   SOURCE_NODE="180"
#!   TARGET_NODE="108"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="193"
#!   SOURCE_NODE="188"
#!   TARGET_NODE="104"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="198"
#!   SOURCE_NODE="192"
#!   TARGET_NODE="197"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="196"
#!   SOURCE_NODE="194"
#!   TARGET_NODE="133"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="199"
#!   SOURCE_NODE="195"
#!   TARGET_NODE="192"
#!   SOURCE_PORT_DESC="fo 0 AGGREGATE"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="200"
#!   SOURCE_NODE="197"
#!   TARGET_NODE="150"
#!   SOURCE_PORT_DESC="fo 0 Output"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="122"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="115"
#!   SOURCE_PORT_DESC="fo 1 &lt;lt&gt;REJECTED&lt;gt&gt;"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="140"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="56"
#!   SOURCE_PORT_DESC="fo 1 CSV"
#!   TARGET_PORT_DESC="fi 0 REQUESTOR"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="153"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="156"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="103"
#!   SOURCE_NODE="24"
#!   TARGET_NODE="99"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="125"
#!   SOURCE_NODE="56"
#!   TARGET_NODE="80"
#!   SOURCE_PORT_DESC="fo 1 UNMERGED_REQUESTOR"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="201"
#!   SOURCE_NODE="142"
#!   TARGET_NODE="195"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="168"
#!   SOURCE_NODE="151"
#!   TARGET_NODE="161"
#!   SOURCE_PORT_DESC="fo 1 NOT_MATCHED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="169"
#!   SOURCE_NODE="155"
#!   TARGET_NODE="162"
#!   SOURCE_PORT_DESC="fo 1 NOT_MATCHED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="170"
#!   SOURCE_NODE="161"
#!   TARGET_NODE="159"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="171"
#!   SOURCE_NODE="162"
#!   TARGET_NODE="160"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="127"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="126"
#!   SOURCE_PORT_DESC="fo 4 &lt;lt&gt;REJECTED&lt;gt&gt;"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="137"
#!   SOURCE_NODE="56"
#!   TARGET_NODE="130"
#!   SOURCE_PORT_DESC="fo 4 &lt;lt&gt;REJECTED&lt;gt&gt;"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! <SUBDOCUMENT
#!   NAME="DTStamperYYYY-MM-DD_HH:MI:SS.sss"
#!   ARCGIS_COMPATIBILITY=""
#!   CATEGORY="Date and Time"
#!   DESCRIPTION="&lt;h1&gt;DTStamperYYYY-MM-DD_HH:MI:SS.sss&lt;/h1&gt;&#10;&lt;p&gt;Skapar en tidsstämpel i specifika formatet YYYY-MM-DD HH:MI:SS.sss där&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;YYYY, År med fyra siffror&lt;/li&gt;&#10;&lt;li&gt;MM,   Månad med två siffror&lt;/li&gt;&#10;&lt;li&gt;DD,   Dag med två siffror&lt;/li&gt;&#10;&lt;li&gt;HH,   24-timmar med två siffror&lt;/li&gt;&#10;&lt;li&gt;MI,   Minuter med två siffror&lt;/li&gt;&#10;&lt;li&gt;SS,   Sekunder med två siffror&lt;/li&gt;&#10;&lt;li&gt;sss,  Millisekunder med tre siffror&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;h2&gt;Output&lt;/h2&gt;&#10;&lt;p&gt;Attributet &lt;strong&gt;_datetimestamp&lt;/strong&gt;&lt;/p&gt;"
#!   DOC_DYNAMIC_INPUT_ATTRS="0"
#!   DOC_EXTENTS="3785.01 714.507"
#!   DOC_TOP_LEFT="100 -814.507"
#!   FME_DOCUMENT_GUID="5682fad0-cc96-44f0-9d65-69883ef21648"
#!   FME_DOCUMENT_PRIORGUID="5f29d094-cea5-4be4-95ee-02f18ad0a738,7bcc7685-cc10-4b5e-b3a8-4d3b17f96cf5,69cd9c6c-adfb-4177-b38f-b9974816f718"
#!   FME_NAMES_ENCODING="windows-1252"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_PROCESS_PRESERVE_GROUP_ATTR="No"
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   GUID="5682fad0-cc96-44f0-9d65-69883ef21648"
#!   HISTORY="2018-01-26&lt;space&gt;15:30,Christian&lt;space&gt;Gullin,Skapad"
#!   IS_VISIBLE="false"
#!   LAST_SAVE_BUILD="FME(R) 2017.1.0.0 (20170731 - Build 17539 - WIN64)"
#!   LAST_SAVE_DATE="2018-01-26T16:50:17"
#!   MARKDOWN_DESCRIPTION="#DTStamperYYYY-MM-DD_HH:MI:SS.sss&#10;Skapar en tidsstämpel i specifika formatet YYYY-MM-DD HH:MI:SS.sss där&#10;&#10;&#10;- YYYY,&#9;År med fyra siffror&#10;- MM,&#9;Månad med två siffror&#10;- DD,&#9;Dag med två siffror&#10;- HH,&#9;24-timmar med två siffror&#10;- MI,&#9;Minuter med två siffror&#10;- SS,&#9;Sekunder med två siffror&#10;- sss,&#9;Millisekunder med tre siffror&#10;&#10;##Output&#10;Attributet **_datetimestamp**"
#!   MARKDOWN_USAGE=""
#!   PYTHON_COMPATIBILITY=""
#!   REPLACED_BY=""
#!   SUPPRESS_UPGRADE="false"
#!   TITLE="DTStamperYYYY-MM-DD_HH:MI:SS.sss"
#!   USAGE=""
#!   USE_MARKDOWN="YES"
#!   VIEW_POSITION="-168.752 0"
#!   XFORM_DEPRECATED="No"
#!   ZOOM_SCALE="100"
#! >
#! <GLOBAL_PARAMETERS>
#! </GLOBAL_PARAMETERS>
#! <USER_PARAMETERS
#!   FORM="eyJwYXJhbWV0ZXJzIjpbXX0="
#! >
#! <PARAMETER_INFO>
#! </PARAMETER_INFO>
#! </USER_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="DateTimeStamper"
#!   VERSION="1"
#!   POSITION="748.02099999999996 -100"
#!   BOUNDING_RECT="748.02099999999996 -100 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="DATETIME_ATTR" PARM_VALUE="_dts"/>
#!     <XFORM_PARM PARM_NAME="INCLUDE_OFFSET" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PREVIEW" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PREVIEW_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="STAMP_TYPE" PARM_VALUE="datetime"/>
#!     <XFORM_PARM PARM_NAME="TIMEZONE" PARM_VALUE="local"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DateTimeStamper"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="DateTimeConverter"
#!   VERSION="1"
#!   POSITION="748.02099999999996 -382.54399999999998"
#!   BOUNDING_RECT="748.02099999999996 -382.54399999999998 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="&lt;REJECTED&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="DATETIME_ATTR" PARM_VALUE="_dts"/>
#!     <XFORM_PARM PARM_NAME="IN_FORMAT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="OUT_FORMAT" PARM_VALUE="%Y-%m-%d&lt;space&gt;%H:%M:%S"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REFERENCE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REFERENCE_GROUP" PARM_VALUE="FME_DISCLOSURE_CLOSED"/>
#!     <XFORM_PARM PARM_NAME="REPAIR_INPUT" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="TEST_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_INPUT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_INPUT_GROUP" PARM_VALUE="FME_DISCLOSURE_OPEN"/>
#!     <XFORM_PARM PARM_NAME="TEST_RESULT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="DateTimeConverter"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="4"
#!   TYPE="StringReplacer"
#!   VERSION="4"
#!   POSITION="1392.8099999999999 -403.44999999999999"
#!   BOUNDING_RECT="1392.8099999999999 -403.44999999999999 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_mils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="CASE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="FIND_TEXT" PARM_VALUE="&lt;backslash&gt;.&lt;backslash&gt;d*"/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH" PARM_VALUE="_FME_NO_OP_"/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REGEXP" PARM_VALUE="YES"/>
#!     <XFORM_PARM PARM_NAME="REPLACE_TEXT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_ATTRS" PARM_VALUE="_dts"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringReplacer"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="AttributeCreator"
#!   VERSION="8"
#!   POSITION="1393.79 -100"
#!   BOUNDING_RECT="1393.79 -100 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_mils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_HANDLING" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="&quot;&quot; _mils SET_TO &lt;at&gt;Value&lt;openparen&gt;_dts&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="MULTI_FEATURE_MODE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_MODE_DISPLAY" PARM_VALUE="No Substitution"/>
#!     <XFORM_PARM PARM_NAME="NULL_ATTR_VALUE" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_PRIOR_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="NUM_SUBSEQUENT_FEATURES" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCreator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="6"
#!   TYPE="StringReplacer"
#!   VERSION="4"
#!   POSITION="2002.3499999999999 -100"
#!   BOUNDING_RECT="2002.3499999999999 -100 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_mils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="CASE" PARM_VALUE="NO"/>
#!     <XFORM_PARM PARM_NAME="FIND_TEXT" PARM_VALUE=".*&lt;backslash&gt;."/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH" PARM_VALUE="_FME_NO_OP_"/>
#!     <XFORM_PARM PARM_NAME="NO_MATCH_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REGEXP" PARM_VALUE="YES"/>
#!     <XFORM_PARM PARM_NAME="REPLACE_TEXT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_ATTRS" PARM_VALUE="_mils"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringReplacer_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="7"
#!   TYPE="SubstringExtractor"
#!   VERSION="2"
#!   POSITION="2013.23 -400.50099999999998"
#!   BOUNDING_RECT="2013.23 -400.50099999999998 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_mils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_subMils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="END" PARM_VALUE="2"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="RESULT_ATTR" PARM_VALUE="_subMils"/>
#!     <XFORM_PARM PARM_NAME="SRC_STRING" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;_mils&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="START" PARM_VALUE="0"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="SubstringExtractor"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="8"
#!   TYPE="StringConcatenator"
#!   VERSION="7"
#!   POSITION="2733.2600000000002 -100"
#!   BOUNDING_RECT="2733.2600000000002 -100 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_mils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_dts" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_subMils" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ACTION" PARM_VALUE="Create New Attribute"/>
#!     <XFORM_PARM PARM_NAME="ATTRLIST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAM_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARM_LINE" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;_dts&lt;closeparen&gt;.&lt;at&gt;Value&lt;openparen&gt;_subMils&lt;closeparen&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="_datetimestamp"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="StringConcatenator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="9"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="2717.7800000000002 -406.75200000000001"
#!   BOUNDING_RECT="2717.7800000000002 -406.75200000000001 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17539"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_datetimestamp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="_mils,_dts,_subMils"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="10"
#!   NAME="Input"
#!   POSITION="100 -100"
#!   BOUNDING_RECT="100 -100 431 71"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="11"
#!   NAME="Output"
#!   POSITION="3454.0100000000002 -471.87900000000002"
#!   BOUNDING_RECT="3454.0100000000002 -471.87900000000002 431 71"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="12"
#!   NAME="&lt;Rejected&gt;"
#!   POSITION="3454.0100000000002 -743.50699999999995"
#!   BOUNDING_RECT="3454.0100000000002 -743.50699999999995 431 71"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="1"
#! >
#!     <XFORM_ATTR ATTR_NAME="fme_rejection_code" ATTR_TYPE="buffer" />
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="13"
#!   SOURCE_NODE="10"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="6"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="17"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="4"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="18"
#!   SOURCE_NODE="6"
#!   TARGET_NODE="7"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="7"
#!   TARGET_NODE="8"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="20"
#!   SOURCE_NODE="8"
#!   TARGET_NODE="9"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="21"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="22"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 1 &lt;lt&gt;REJECTED&lt;gt&gt;"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! </SUBDOCUMENT>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>

FME_PYTHON_VERSION 2or3
ARCGIS_COMPATIBILITY ARCGIS_AUTO
# ============================================================================
DEFAULT_MACRO RotDirectory ../
DEFAULT_MACRO ProcessName 
DEFAULT_MACRO ProcessModulName 
DEFAULT_MACRO InData [TOMT]
DEFAULT_MACRO OutputDirectory C:\LKR_GIS\Datalager_procsrc\_geodatarepo\landskrona\lkr_gis
DEFAULT_MACRO IsWholeProcessRun 1
DEFAULT_MACRO FME_USER_PARAM_PRIVATE_GRP 
DEFAULT_MACRO FeatureListFile _modul-settings-datasets.ini
# ============================================================================
GUI TEXT RotDirectory Katalogen där processen startar:
GUI OPTIONAL TEXT ProcessName Processnamn:
GUI OPTIONAL TEXT ProcessModulName Processmodulsnamn:
GUI TEXT InData Indata:
GUI OPTIONAL TEXT OutputDirectory Katalog för lagring av del av datalager:
GUI OPTIONAL TEXT IsWholeProcessRun Är hela datalagerprocessen körd:
# ============================================================================
USER_PARAMETERS eyJwYXJhbWV0ZXJzIjpbeyJkZWZhdWx0VmFsdWUiOiIuLi8iLCJlZGl0b3IiOiJwbGFpbnRleHQiLCJuYW1lIjoiUm90RGlyZWN0b3J5IiwicHJvbXB0IjoiS2F0YWxvZ2VuIGTDpHIgcHJvY2Vzc2VuIHN0YXJ0YXI6IiwicmVxdWlyZWQiOnRydWUsInNob3dFZGl0QnV0dG9uIjpmYWxzZSwidHlwZSI6InRleHQiLCJ2YWx1ZVR5cGUiOiJzdHJpbmcifSx7ImVkaXRvciI6InBsYWludGV4dCIsIm5hbWUiOiJQcm9jZXNzTmFtZSIsInByb21wdCI6IlByb2Nlc3NuYW1uOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJlZGl0b3IiOiJwbGFpbnRleHQiLCJuYW1lIjoiUHJvY2Vzc01vZHVsTmFtZSIsInByb21wdCI6IlByb2Nlc3Ntb2R1bHNuYW1uOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiJDOlxcRGV2XFxEYXRhbGFnZXJfcHJvY3NyY1xcbnZ2XFxfc2NoZW1hXFxfbW9kdWwtc2V0dGluZ3MtZGF0YXNldHMuaW5pIiwiZWRpdG9yIjoicGxhaW50ZXh0IiwibmFtZSI6IkluRGF0YSIsInByb21wdCI6IkluZGF0YToiLCJyZXF1aXJlZCI6dHJ1ZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiJDOlxcTEtSX0dJU1xcRGF0YWxhZ2VyX3Byb2NzcmNcXF9nZW9kYXRhcmVwb1xcbGFuZHNrcm9uYVxcbGtyX2dpcyIsImVkaXRvciI6InBsYWludGV4dCIsIm5hbWUiOiJPdXRwdXREaXJlY3RvcnkiLCJwcm9tcHQiOiJLYXRhbG9nIGbDtnIgbGFncmluZyBhdiBkZWwgYXYgZGF0YWxhZ2VyOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJkZWZhdWx0VmFsdWUiOiIxIiwiZWRpdG9yIjoicGxhaW50ZXh0IiwibmFtZSI6IklzV2hvbGVQcm9jZXNzUnVuIiwicHJvbXB0Ijoiw4RyIGhlbGEgZGF0YWxhZ2VycHJvY2Vzc2VuIGvDtnJkOiIsInJlcXVpcmVkIjpmYWxzZSwic3VwcG9ydGVkVmFsdWVUeXBlcyI6WyJleHByZXNzaW9uIiwiZ2xvYmFsUGFyYW1ldGVyIl0sInR5cGUiOiJ0ZXh0IiwidmFsdWVUeXBlIjoic3RyaW5nIn0seyJoaWRkZW4iOnRydWUsIm5hbWUiOiJGTUVfVVNFUl9QQVJBTV9QUklWQVRFX0dSUCIsInBhcmFtZXRlcnMiOlt7ImRlZmF1bHRWYWx1ZSI6Il9tb2R1bC1zZXR0aW5ncy1kYXRhc2V0cy5pbmkiLCJlZGl0b3IiOiJwbGFpbnRleHQiLCJoaWRkZW4iOnRydWUsIm5hbWUiOiJGZWF0dXJlTGlzdEZpbGUiLCJwcm9tcHQiOiJGaWwgbWVkIGxpc3RhZGUgZmVhdHVyZXM6IiwicmVxdWlyZWQiOmZhbHNlLCJzdXBwb3J0ZWRWYWx1ZVR5cGVzIjpbImV4cHJlc3Npb24iLCJnbG9iYWxQYXJhbWV0ZXIiXSwidHlwZSI6InRleHQiLCJ2YWx1ZVR5cGUiOiJzdHJpbmcifV0sInByb21wdCI6IlByaXZhdGUgUGFyYW1ldGVycyIsInJlcXVpcmVkIjpmYWxzZSwidHlwZSI6Imdyb3VwIiwidmFsdWVUeXBlIjoic3RyaW5nIn1dfQ==
# ============================================================================
INCLUDE [ if {{$(RotDirectory)} == {}} { puts_real {Parameter 'RotDirectory' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(InData)} == {}} { puts_real {Parameter 'InData' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE MULTI_READER
WRITER_TYPE NULL
WRITER_KEYWORD NULL_DEST
NULL_DEST_DATASET null
#! END_WB_HEADER
#! START_WB_HEADER
#! END_WB_HEADER
#! END_HEADER

LOG_FILENAME "$(RotDirectory)_log/FME-$(FME_MF_NAME).log"
LOG_APPEND NO
LOG_TIMINGS YES
LOG_FILTER_MASK -1
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_IMPLICIT_CSMAP_REPROJECTION_MODE Auto
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
FME_NAMES_ENCODING windows-1252
# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME _download-http-caller
MACRO FME_VIEWER_APP fmedatainspector
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------
Tcl2 proc Creator_CoordSysRemover {} {   global FME_CoordSys;   set FME_CoordSys {}; }
MACRO Creator_XML     NOT_ACTIVATED
MACRO Creator_CLASSIC NOT_ACTIVATED
MACRO Creator_2D3D    2D_GEOMETRY
MACRO Creator_COORDS  <Unused>
INCLUDE [ if { {Geometry Object} == {Geometry Object} } {            puts {MACRO Creator_XML *} } ]
INCLUDE [ if { {Geometry Object} == {2D Coordinate List} } {            puts {MACRO Creator_2D3D 2D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
INCLUDE [ if { {Geometry Object} == {3D Coordinate List} } {            puts {MACRO Creator_2D3D 3D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
INCLUDE [ if { {Geometry Object} == {2D Min/Max Box} } {            set comment {                We need to turn the COORDS which are                    minX minY maxX maxY                into a full polygon list of coordinates            };            set splitCoords [split [string trim {<Unused>}]];            if { [llength $splitCoords] > 4} {               set trimmedCoords {};               foreach item $splitCoords { if { $item != {} } {lappend trimmedCoords $item} };               set splitCoords $trimmedCoords;            };            if { [llength $splitCoords] != 4 } {                error {Creator: Coordinate list is expected to be a space delimited list of four numbers as 'minx miny maxx maxy' - `<Unused>' is invalid};            };            set minX [lindex $splitCoords 0];            set minY [lindex $splitCoords 1];            set maxX [lindex $splitCoords 2];            set maxY [lindex $splitCoords 3];            puts "MACRO Creator_COORDS $minX $minY $minX $maxY $maxX $maxY $maxX $minY $minX $minY";            puts {MACRO Creator_2D3D 2D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
FACTORY_DEF {$(Creator_XML)} CreationFactory    FACTORY_NAME { Creator_XML_Creator }    CREATE_AT_END { no }    OUTPUT { FEATURE_TYPE _____CREATED______        @Geometry(FROM_ENCODED_STRING,<lt>?xml<space>version=<quote>1.0<quote><space>encoding=<quote>US_ASCII<quote><space>standalone=<quote>no<quote><space>?<gt><lt>geometry<space>dimension=<quote>2<quote><gt><lt>null<solidus><gt><lt><solidus>geometry<gt>) }
FACTORY_DEF {$(Creator_CLASSIC)} CreationFactory    FACTORY_NAME { Creator_CLASSIC_Creator }    $(Creator_2D3D) { $(Creator_COORDS) }    CREATE_AT_END { no }    OUTPUT { FEATURE_TYPE _____CREATED______ }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { Creator_Cloner }    INPUT FEATURE_TYPE _____CREATED______        @Tcl2(Creator_CoordSysRemover)        @CoordSys()    NUMBER_OF_COPIES { 1 }    COPY_NUMBER_ATTRIBUTE { "_creation_instance" }    OUTPUT { FEATURE_TYPE Creator_CREATED        fme_feature_type Creator         }
FACTORY_DEF * BranchingFactory   FACTORY_NAME "Creator_CREATED Brancher -1 4"   INPUT FEATURE_TYPE Creator_CREATED   TARGET_FACTORY "$(WB_CURRENT_CONTEXT)_CREATOR_BRANCH_TARGET"   MAXIMUM_COUNT None   OUTPUT PASSED FEATURE_TYPE *
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(WB_CURRENT_CONTEXT)_CREATOR_BRANCH_TARGET"   INPUT FEATURE_TYPE *  OUTPUT FEATURE_TYPE *
# -------------------------------------------------------------------------
Tcl2 proc ParameterFetcher_2_doFetch {} {    foreach {name val} {"RotDirectory {$(RotDirectory$encode)} ProcessName {$(ProcessName$encode)} ProcessModulName {$(ProcessModulName$encode)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {ParameterFetcher_2}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {ParameterFetcher_2}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { ParameterFetcher_2 }    INPUT  FEATURE_TYPE Creator_CREATED    OUTPUT { FEATURE_TYPE ParameterFetcher_2_OUTPUT         @Tcl2(ParameterFetcher_2_doFetch)          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { UUIDGenerator_2 }    INPUT  FEATURE_TYPE ParameterFetcher_2_OUTPUT    OUTPUT { FEATURE_TYPE UUIDGenerator_2_OUTPUT         "ProcessID" @UUID()          }
FACTORY_DEF * TeeFactory   FACTORY_NAME "UUIDGenerator_2 OUTPUT Splitter"   INPUT FEATURE_TYPE UUIDGenerator_2_OUTPUT   OUTPUT FEATURE_TYPE UUIDGenerator_2_OUTPUT_0_BtV2N4jaFPw=   OUTPUT FEATURE_TYPE UUIDGenerator_2_OUTPUT_1_auHCD7Yu0A0=   OUTPUT FEATURE_TYPE UUIDGenerator_2_OUTPUT_2_8uYTH5+vQ5Q=
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_5_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"K<u00f6>r<space><at>Value<openparen>ProcessName<closeparen><space>f<u00f6>r<space>nedladdning<space>av<space>data<space>definierad<space>i<space><quote>$(InData$encode)<quote><space>till<space>datalagret."};    };    lappend parmList {StringConcatenator_5};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_5 }    INPUT  FEATURE_TYPE UUIDGenerator_2_OUTPUT_1_auHCD7Yu0A0=    OUTPUT { FEATURE_TYPE StringConcatenator_5_OUTPUT         @Tcl2("StringConcatenator_5_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_5_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca0_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca0_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec0_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec0_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_runner { parmListString workspaceFile } {    global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands;    global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count;    incr Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count 0;    if { [info exists Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands] == 0 } {       set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands [join $commandArguments " "];    incr Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count;    if { {No} == {No} && {1} > 1  && $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count <= {1} } {       FME_LogMessage fme_inform 933450 Logg_2 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_2 $commandArgumentsToLog;    };    if { {No} != {No} || $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count == {1} } {       set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_batch_count 0;       set commandFile [Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_writeCommandFile $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {No} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_flushNeeded { } {    global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands;    if { [info exists Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands] == 1 && [llength $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_flushPending { } {    global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands;    if { [info exists Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands] == 1 && [llength $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands] > 0 } {       set workspaceToRun [lindex $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands 0];       set commandFile [Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_writeCommandFile $Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {No} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_runCommand {commandArguments workspaceFileUnix} {    if { {No} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {No} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {No} == {No} } {        lappend commandArguments {&};    };    if { {No} == {No} } {       after 1000;       while { [FME_CanSpawnFme ] == {0} } {             after 2000;       };    };    if { No == {No} && {1} > 1 } {       FME_LogMessage fme_inform 933452 Logg_2 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_2 $commandArguments;    };    if { $::__platform__ == {windows} && {No} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_2 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_process_count;       incr Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_process_count;       if { {No} == {No} } {           FME_LogMessage fme_inform 933455 Logg_2 $workspaceFileUnix;           global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_all_processes;           lappend Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_2 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_2 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_2_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_Output    TEST @Tcl2("Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_2)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessName<closeparen>,Logg_2)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_2)EX_TYPEINFORMATIONEX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_2)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_2)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>RotDirectory<closeparen>,Logg_2)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_2)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_2)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_2)}") == SUCCESS
Tcl2 proc Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_summarizer { } {     global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_process_count 0;     FME_SetAttribute _proc_count [set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_process_count];     global Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_all_processes;     if {[info exists Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_all_processes]} {         set index 0;         foreach pid [set Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_2_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_2___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_2_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_2___cleanup___    TEST { @Tcl2(Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_2___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_2_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_2___cleanup___    TEST { @Tcl2(Logg_2_3c1d4059_02da_463d_adb6_f90dba292c570_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_2_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
MACRO FeatureReader_OUTPUT_PORTS_ENCODED CSV
MACRO FeatureReader_DIRECTIVES FIELD_VALUES_GROUP,FME_DISCLOSURE_CLOSED,DELIMITER,|,ENFORCE_STRICT_SCHEMA,No,TRIM_FIELD_NAME_QUALIFIERS,Yes,CASE_SENSITIVE_FIELD_NAMES,Yes,USE_CUSTOM_SCHEMA,NO,TRIM_FIELD_VALUE_QUALIFIERS,Yes,DATA_START_LINE,1,ADVANCED_GROUP,FME_DISCLOSURE_OPEN,FIELD_SEPARATION_GROUP,FME_DISCLOSURE_CLOSED,FEATURE_TYPE_NAME,FORMAT_NAME,PRESERVE_SOURCE_ENCODING,No,SCAN_TYPES,No,SCHEMA_GENERATION_GROUP,FME_DISCLOSURE_CLOSED,ENCODING_GROUP,FME_DISCLOSURE_CLOSED,SCAN_MAX_ROWS,1000,EXPOSE_ATTRS_GROUP,FME_DISCLOSURE_OPEN,READ_SKIPPED_LINES,No,SKIPPED_LINES_GROUP,FME_DISCLOSURE_CLOSED,SKIP_DUPLICATE_DELIMITERS,No,SCAN_ADDITIONAL_FIELDS,No,FIELD_NAMES_GROUP,FME_DISCLOSURE_CLOSED
# Always provide an INTERACTION, otherwise the factory defaults to ENVELOPE_INTERSECTS
INCLUDE [if { ( {NONE} == {<Unused>} ) || ( {($INTERACT)} == {} ) } {             puts {MACRO FCTQUERY_INTERACTION_LINE FCTQUERY_INTERACTION NONE};          } else {             puts {MACRO FCTQUERY_INTERACTION_LINE FCTQUERY_INTERACTION "NONE"};          }         ]
# Consolidate the attribute merge options to what the factory expects
DEFAULT_MACRO FeatureReader_COMBINE_ATTRS
INCLUDE [       if { {RESULT_ONLY} == {MERGE} } {          puts "MACRO FeatureReader_COMBINE_ATTRS <Unused>";       } else {          puts "MACRO FeatureReader_COMBINE_ATTRS RESULT_ONLY";       };    ]
INCLUDE [    puts {DEFAULT_MACRO FeatureReaderDataset_FeatureReader @EvaluateExpression(FDIV,STRING_ENCODED,$(RotDirectory$encode)$(ProcessName$encode)<solidus>_schema<solidus>$(FeatureListFile$encode),FeatureReader)}; ]
FACTORY_DEF {*} QueryFactory    FACTORY_NAME { FeatureReader }    INPUT  FEATURE_TYPE UUIDGenerator_2_OUTPUT_2_8uYTH5+vQ5Q=    $(FCTQUERY_INTERACTION_LINE)    COMBINE_ATTRIBUTES  { $(FeatureReader_COMBINE_ATTRS) }    IGNORE_NULLS        { <Unused> }    QUERYFCT_ATTRIBUTE_PREFIX { <Unused> }    COMBINE_GEOMETRY    { RESULT_ONLY }    ENABLE_CACHE        { NO }    QUERYFCT_TABLE_SEPARATOR { SPACE }    READER_TYPE         { CSV2  }    READER_DATASET      { "$(FeatureReaderDataset_FeatureReader)" }    QUERYFCT_IDS        { "" }    READER_DIRECTIVES   { METAFILE,CSV2 }    QUERYFCT_OUTPUT     { "DATA_ONLY" }    CONTINUE_ON_READER_ERROR YES    QUERYFCT_RESULT_TAGS { $(FeatureReader_OUTPUT_PORTS_ENCODED) }    QUERYFCT_SET_FME_FEATURE_TYPE YES    READER_PARAMS_WWJD     { $(FeatureReader_DIRECTIVES) }    TREAT_READER_PARAM_AMPERSANDS_AS_LITERALS YES    OUTPUT { READER_ERROR FEATURE_TYPE FeatureReader_<REJECTED>           }    OUTPUT CSV FEATURE_TYPE FeatureReader_CSV
# -------------------------------------------------------------------------
INCLUDE [if { {ATTRIBUTES} == {ATTRIBUTES} } {                puts "MACRO FeatureMerger_REFERENCE_INFO ATTRIBUTES";             }          elseif { {ATTRIBUTES} == {GEOM_BUILD} && {<Unused>} == {POLYGONS}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_BUILD_POLYS";             }          elseif { {ATTRIBUTES} == {GEOM_BUILD} && {<Unused>} == {AGGREGATES}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_BUILD_AGGREGATES";             }          elseif { {ATTRIBUTES} == {GEOM_BUILD} && {<Unused>} == {LINESFROMPOINTS}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_BUILD_LINES_FROM_POINTS";             }          elseif { {ATTRIBUTES} == {GEOM_AND_ATTRS} && {<Unused>} == {POLYGONS}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_AND_ATTR_BUILD_POLYS";             }          elseif { {ATTRIBUTES} == {GEOM_AND_ATTRS} && {<Unused>} == {AGGREGATES}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_AND_ATTR_BUILD_AGGREGATES";             }          elseif { {ATTRIBUTES} == {GEOM_AND_ATTRS} && {<Unused>} == {LINESFROMPOINTS}} {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_AND_ATTR_BUILD_LINES_FROM_POINTS";             }          elseif { {ATTRIBUTES} == {GEOM_BUILD} } {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_BUILD_AGGREGATES";             }          elseif { {ATTRIBUTES} == {GEOM_AND_ATTRS} } {                puts "MACRO FeatureMerger_REFERENCE_INFO GEOM_AND_ATTR_BUILD_AGGREGATES";             }          else {}; ]
FACTORY_DEF {*} ReferenceFactory    FACTORY_NAME { FeatureMerger }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    INPUT REFERENCER FEATURE_TYPE FeatureReader_CSV    INPUT REFERENCEE FEATURE_TYPE UUIDGenerator_2_OUTPUT_0_BtV2N4jaFPw=    REFERENCE_INFO { $(FeatureMerger_REFERENCE_INFO) }    REFERENCE_TABLE { 1 1 AUTO }    ATTR_ACCUM_MODE { "HANDLE_CONFLICT" }    ATTR_CONFLICT_RES { "REQUESTOR_IF_CONFLICT" }    IGNORE_NULLS { "No" }    HANDLE_NULL_MISSING_KEYS_LIKE_FME2013 { No }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    MERGE_ATTRIBUTES Yes    MANAGE_FME_TYPE Yes    MODE COMPLETE    PROCESS_DUPLICATE_REFERENCEES { NO }    REFERENCEES_FIRST { No }    REJECT_INVALID_GEOM YES    CLEANING_TOLERANCE { <Unused> }    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { COMPLETE FEATURE_TYPE FeatureMerger_MERGED         }    OUTPUT { INCOMPLETE FEATURE_TYPE FeatureMerger_UNMERGED_REQUESTOR         }    OUTPUT { REJECTED FEATURE_TYPE FeatureMerger_<REJECTED>         }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Tester }    INPUT  FEATURE_TYPE FeatureMerger_MERGED    TEST "@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>col0<closeparen>,Tester)" BEGINS_WITH <semicolon> ENCODED TEST col0 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col0 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col1 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col1 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col1 ATTRIBUTE_IS_MISSING "" ENCODED TEST col2 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col2 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col2 ATTRIBUTE_IS_MISSING "" ENCODED TEST col3 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col3 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col3 ATTRIBUTE_IS_MISSING "" ENCODED    BOOLEAN_OPERATOR { COMPOSITE }    COMPOSITE_TEST_EXPR { "1 OR (( 2 OR 3 ) AND ( 4 OR 5 OR 6 ) AND ( 7 OR 8 OR 9 ) AND ( 10 OR 11 OR 12 ))" }    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE Tester_PASSED         }    OUTPUT { FAILED FEATURE_TYPE Tester_FAILED         }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_4 }    INPUT  FEATURE_TYPE Tester_PASSED    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_4_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_11_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>poster<space>fr<u00e5>n<space><quote>$(InData$encode)<quote><space>har<space>filtrerats<space>bort<space>p.g.a.<space>avsaknade<space>v<u00e4>rden<space>eller<space>borkommentering."};    };    lappend parmList {StringConcatenator_11};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_11 }    INPUT  FEATURE_TYPE Aggregator_4_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_11_OUTPUT         @Tcl2("StringConcatenator_11_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_5 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_11_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_5
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_5
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca1_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca1_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec1_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec1_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_5 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_5 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_5<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_runner { parmListString workspaceFile } {    global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands;    global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count;    incr Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count 0;    if { [info exists Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands] == 0 } {       set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands [join $commandArguments " "];    incr Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_8 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_8 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count == {<Unused>} } {       set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_batch_count 0;       set commandFile [Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_writeCommandFile $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_flushNeeded { } {    global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands;    if { [info exists Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands] == 1 && [llength $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_flushPending { } {    global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands;    if { [info exists Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands] == 1 && [llength $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands] > 0 } {       set workspaceToRun [lindex $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands 0];       set commandFile [Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_writeCommandFile $Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_8 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_8 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_8 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_process_count;       incr Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_8 $workspaceFileUnix;           global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_all_processes;           lappend Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_8 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_8 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_8_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_5_Output    TEST @Tcl2("Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_8)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessName$encode),Logg_8)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_8)EX_TYPEVARNINGEX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_8)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_8)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,$(RotDirectory$encode),Logg_8)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_8)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_8)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_8)}") == SUCCESS
Tcl2 proc Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_summarizer { } {     global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_process_count 0;     FME_SetAttribute _proc_count [set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_process_count];     global Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_all_processes;     if {[info exists Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_all_processes]} {         set index 0;         foreach pid [set Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_8_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_8___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_8_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_8___cleanup___    TEST { @Tcl2(Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_8___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_8_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_8___cleanup___    TEST { @Tcl2(Logg_8_cf7cbe43_8bbc_4922_ac9a_e772520353d10_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_8_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} StringReplacerFactory    FACTORY_NAME { StringReplacer }    INPUT  FEATURE_TYPE Tester_FAILED    USE_REGEX { YES }    CASE_SENSITIVE { NO }    SOURCE_ATTRIBUTES { col0 }    FIND_TEXT { "<backslash><solidus><backslash>*<backslash>*<backslash><solidus>.*" }    REPLACE_TEXT { "" }    REPLACE_NO_MATCH { "_FME_NO_OP_" }    OUTPUT { OUTPUT FEATURE_TYPE StringReplacer_OUTPUT          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME { AttributeCreator }    COMMAND_PARM_EVALUATION SINGLE_PASS    INPUT  FEATURE_TYPE StringReplacer_OUTPUT    MULTI_FEATURE_MODE { NO }    NULL_ATTR_MODE { NO_OP }    ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV    ATTR_ACTION { "" "_col1_absolute_path" "SET_TO" "" }      ATTR_ACTION { "" "_col2_absolute_path" "SET_TO" "" }    OUTPUT { OUTPUT FEATURE_TYPE AttributeCreator_OUTPUT        }
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {no} == {no} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc StringSearcher_3_01ff54b8_0817_4bc5_bac5_da05d797b2580_doGrep { stringToSearch regExp matchedChars matches matchedParts } {   set subMatches 1;   set matches [FME_DecodeText $matches];   set matchedParts [FME_DecodeText $matchedParts];   set stringToSearch [FME_ReplaceRegex "\015\012?" [FME_DecodeText $stringToSearch] "\012"];   set results [FME_GetRegex $(casemac) [FME_DecodeText $regExp] $stringToSearch];   if {[llength [lindex $results 0]] > 0} {      set attrName [FME_DecodeText $matchedChars];      FME_SetAttribute $attrName [lindex [lindex [lindex $results 0] 0] 0];      set index 0;      set parts [lindex $results 1];      foreach part $parts {         if {[llength $matchedParts] > 0} {             set attrName "$matchedParts{$index}.part";             FME_SetAttribute $attrName [lindex $part 0];             set attrName "$matchedParts{$index}.startIndex";             FME_SetAttribute $attrName [lindex $part 1];         };         incr index;      };      set index 0;      set regexMatches [lindex $results 0];      foreach part $regexMatches {         if {[llength $matches] > 0} {             set attrName "$matches{$index}.match";             FME_SetAttribute $attrName [lindex $part 0];             set attrName "$matches{$index}.startIndex";             FME_SetAttribute $attrName [lindex $part 1];         };         set isFirstMatch 0;         incr index;      };      return $index;   };   return -1; }
FACTORY_DEF {*} TestFactory    FACTORY_NAME { StringSearcher_3 }    INPUT  FEATURE_TYPE AttributeCreator_OUTPUT    TEST @Tcl2("StringSearcher_3_01ff54b8_0817_4bc5_bac5_da05d797b2580_doGrep {@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>col1<closeparen>,StringSearcher_3)} {:} {} {} {}") > 0    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE StringSearcher_3_MATCHED         }    OUTPUT { FAILED FEATURE_TYPE StringSearcher_3_NOT_MATCHED         }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME { AttributeCreator_13 }    COMMAND_PARM_EVALUATION SINGLE_PASS    INPUT  FEATURE_TYPE StringSearcher_3_MATCHED    MULTI_FEATURE_MODE { NO }    NULL_ATTR_MODE { NO_OP }    ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV    ATTR_ACTION { "" "_col1_absolute_path" "SET_TO" "1" }    OUTPUT { OUTPUT FEATURE_TYPE AttributeCreator_13_OUTPUT        }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Tester_13 }    INPUT  FEATURE_TYPE StringSearcher_3_NOT_MATCHED    TEST col1 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col1 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col1 ATTRIBUTE_IS_MISSING "" ENCODED    BOOLEAN_OPERATOR { OR }    COMPOSITE_TEST_EXPR { "1 OR 2 OR 3" }    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE Tester_13_PASSED         }    OUTPUT { FAILED FEATURE_TYPE Tester_13_FAILED         }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_13_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {col1}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>RotDirectory<closeparen><at>Value<openparen>ProcessModulName<closeparen><solidus><at>Value<openparen>col1<closeparen>"};    };    lappend parmList {StringConcatenator_13};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_13 }    INPUT  FEATURE_TYPE Tester_13_FAILED    OUTPUT { FEATURE_TYPE StringConcatenator_13_OUTPUT         @Tcl2("StringConcatenator_13_evaluator ")          }
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {no} == {no} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc StringSearcher_4_e3b645d8_2a5b_42cd_bab9_f65f86169fd30_doGrep { stringToSearch regExp matchedChars matches matchedParts } {   set subMatches 1;   set matches [FME_DecodeText $matches];   set matchedParts [FME_DecodeText $matchedParts];   set stringToSearch [FME_ReplaceRegex "\015\012?" [FME_DecodeText $stringToSearch] "\012"];   set results [FME_GetRegex $(casemac) [FME_DecodeText $regExp] $stringToSearch];   if {[llength [lindex $results 0]] > 0} {      set attrName [FME_DecodeText $matchedChars];      FME_SetAttribute $attrName [lindex [lindex [lindex $results 0] 0] 0];      set index 0;      set parts [lindex $results 1];      foreach part $parts {         if {[llength $matchedParts] > 0} {             set attrName "$matchedParts{$index}.part";             FME_SetAttribute $attrName [lindex $part 0];             set attrName "$matchedParts{$index}.startIndex";             FME_SetAttribute $attrName [lindex $part 1];         };         incr index;      };      set index 0;      set regexMatches [lindex $results 0];      foreach part $regexMatches {         if {[llength $matches] > 0} {             set attrName "$matches{$index}.match";             FME_SetAttribute $attrName [lindex $part 0];             set attrName "$matches{$index}.startIndex";             FME_SetAttribute $attrName [lindex $part 1];         };         set isFirstMatch 0;         incr index;      };      return $index;   };   return -1; }
FACTORY_DEF {*} TestFactory    FACTORY_NAME { StringSearcher_4 }    INPUT  FEATURE_TYPE AttributeCreator_13_OUTPUT    INPUT  FEATURE_TYPE StringConcatenator_13_OUTPUT    INPUT  FEATURE_TYPE Tester_13_PASSED    TEST @Tcl2("StringSearcher_4_e3b645d8_2a5b_42cd_bab9_f65f86169fd30_doGrep {@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>col2<closeparen>,StringSearcher_4)} {:} {} {} {}") > 0    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE StringSearcher_4_MATCHED         }    OUTPUT { FAILED FEATURE_TYPE StringSearcher_4_NOT_MATCHED         }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME { AttributeCreator_14 }    COMMAND_PARM_EVALUATION SINGLE_PASS    INPUT  FEATURE_TYPE StringSearcher_4_MATCHED    MULTI_FEATURE_MODE { NO }    NULL_ATTR_MODE { NO_OP }    ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV    ATTR_ACTION { "" "_col2_absolute_path" "SET_TO" "1" }    OUTPUT { OUTPUT FEATURE_TYPE AttributeCreator_14_OUTPUT        }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Tester_14 }    INPUT  FEATURE_TYPE StringSearcher_4_NOT_MATCHED    TEST col2 ATTRIBUTE_VALUE_NULL "" ENCODED TEST col2 ATTRIBUTE_IS_EMPTY "" ENCODED TEST col2 ATTRIBUTE_IS_MISSING "" ENCODED    BOOLEAN_OPERATOR { OR }    COMPOSITE_TEST_EXPR { "1 OR 2 OR 3" }    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE Tester_14_PASSED         }    OUTPUT { FAILED FEATURE_TYPE Tester_14_FAILED         }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_14_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {col2}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>RotDirectory<closeparen><at>Value<openparen>ProcessModulName<closeparen><solidus><at>Value<openparen>col2<closeparen>"};    };    lappend parmList {StringConcatenator_14};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_14 }    INPUT  FEATURE_TYPE Tester_14_FAILED    OUTPUT { FEATURE_TYPE StringConcatenator_14_OUTPUT         @Tcl2("StringConcatenator_14_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Tester_2 }    INPUT  FEATURE_TYPE AttributeCreator_14_OUTPUT    INPUT  FEATURE_TYPE StringConcatenator_14_OUTPUT    INPUT  FEATURE_TYPE Tester_14_PASSED    TEST "@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>col1<closeparen>,Tester_2)" BEGINS_WITH http:<solidus><solidus> ENCODED TEST "@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>col1<closeparen>,Tester_2)" BEGINS_WITH https:<solidus><solidus> ENCODED    BOOLEAN_OPERATOR { OR }    COMPOSITE_TEST_EXPR { "1 OR 2" }    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { ACROSS_OUTPUT_PORTS }    OUTPUT { PASSED FEATURE_TYPE Tester_2_PASSED         }    OUTPUT { FAILED FEATURE_TYPE Tester_2_FAILED         }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_get_file}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>col1<closeparen><at>Value<openparen>col0<closeparen>"};    };    lappend parmList {StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator }    INPUT  FEATURE_TYPE Tester_2_PASSED    OUTPUT { FEATURE_TYPE StringConcatenator_OUTPUT         @Tcl2("StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_2_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_put_file}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>col2<closeparen><at>Value<openparen>col0<closeparen>"};    };    lappend parmList {StringConcatenator_2};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_2 }    INPUT  FEATURE_TYPE StringConcatenator_OUTPUT    OUTPUT { FEATURE_TYPE StringConcatenator_2_OUTPUT         @Tcl2("StringConcatenator_2_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} HTTPFactory    FACTORY_NAME { HTTPCaller }       INPUT  FEATURE_TYPE StringConcatenator_2_OUTPUT    TARGET_URL { "@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_get_file<closeparen>,HTTPCaller)" }    HTTP_METHOD { GET }    SAVE_FILE { YES }    OUTPUT_FILENAME { "@EvaluateExpression(FDIV,STRING,<at>Value<openparen>_put_file<closeparen>,HTTPCaller)" }    OUTPUT_DIRECTORY { "<Unused>" }    FILE_EXTENSION { "<Unused>" }    TARGET_ATTR { "<Unused>" }    FILE_PATH_ATTR { "_response_file_path" }    UPLOAD_FILE { "<Unused>" }    UPLOAD_BODY { "<Unused>" }    MULTIPART_UPLOAD { <Unused> }    UPLOAD_CONTENT_TYPE { "<Unused>" }    COMBINED_MULTIPART_TABLE {  }    REQUEST_HEADER_TABLE {  }    ADDITIONAL_URL_PARAMETERS {  }    AUTH_USERNAME { "<Unused>" }    AUTH_PASSWORD { "<Unused>" }    AUTH_METHOD { "<Unused>" }    TARGET_ATTRIBUTE_ENCODING { <Unused> }    RESPONSE_HEADER_LIST_ATTR { "_headers" }    STATUS_CODE_ATTR { "_http_status_code" }    ERROR_ATTR { "_error" }    CONNECTION_TIMEOUT_LENGTH { 60 }    TRANSFER_TIMEOUT_LENGTH { 90 }    FOLLOW_REDIRECTS { FOLLOW_WITH_ORIGINAL_METHOD }    REDIRECT_AUTH { ORIGINAL_DOMAIN_ONLY }    VERIFY_SSL_CERTIFICATES { Yes }    NAMED_CONNECTION { "<Unused>" }    USE_COOKIES { No }    MAX_TRANSFERS_IN_PROGRESS { 25 }    MAX_HTTP_VERSION { HTTP_2 }    OUTPUT { OUTPUT FEATURE_TYPE HTTPCaller_Output          }    OUTPUT { REJECTED FEATURE_TYPE HTTPCaller_<REJECTED>          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Tester_3 }    INPUT  FEATURE_TYPE HTTPCaller_Output    TEST "@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_http_status_code<closeparen>,Tester_3)" = 200 ENCODED    BOOLEAN_OPERATOR { OR }    COMPOSITE_TEST_EXPR { "1" }    FEATURE_TABLE_SHIM_SUPPORT Yes    PRESERVE_FEATURE_ORDER { PER_OUTPUT_PORT }    OUTPUT { PASSED FEATURE_TYPE Tester_3_PASSED         }    OUTPUT { FAILED FEATURE_TYPE Tester_3_FAILED         }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_7 }    INPUT  FEATURE_TYPE Tester_3_PASSED    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_7_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_12_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>laddats<space>ner."};    };    lappend parmList {StringConcatenator_12};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_12 }    INPUT  FEATURE_TYPE Aggregator_7_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_12_OUTPUT         @Tcl2("StringConcatenator_12_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_8 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_12_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_8
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_8
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca2_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca2_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec2_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec2_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_8 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_8 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_8<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_runner { parmListString workspaceFile } {    global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands;    global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count;    incr Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count 0;    if { [info exists Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands] == 0 } {       set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands [join $commandArguments " "];    incr Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_9 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_9 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count == {<Unused>} } {       set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_batch_count 0;       set commandFile [Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_writeCommandFile $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_flushNeeded { } {    global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands;    if { [info exists Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands] == 1 && [llength $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_flushPending { } {    global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands;    if { [info exists Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands] == 1 && [llength $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands] > 0 } {       set workspaceToRun [lindex $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands 0];       set commandFile [Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_writeCommandFile $Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_9 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_9 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_9 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_process_count;       incr Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_9 $workspaceFileUnix;           global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_all_processes;           lappend Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_9 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_9 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_9_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_8_Output    TEST @Tcl2("Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_9)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessName$encode),Logg_9)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_9)EX_TYPEKLARTEX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_9)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_9)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,$(RotDirectory$encode),Logg_9)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_9)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_9)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_9)}") == SUCCESS
Tcl2 proc Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_summarizer { } {     global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_process_count 0;     FME_SetAttribute _proc_count [set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_process_count];     global Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_all_processes;     if {[info exists Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_all_processes]} {         set index 0;         foreach pid [set Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_9_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_9___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_9_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_9___cleanup___    TEST { @Tcl2(Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_9___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_9_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_9___cleanup___    TEST { @Tcl2(Logg_9_7ff05797_03fc_47ca_a0fb_9539f2d7e8970_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_9_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_8 }    INPUT  FEATURE_TYPE Tester_3_FAILED    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_8_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_3_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>dataset<space>fr<u00e5>n<space><quote>$(InData$encode)<quote><space>kunde<space>ej<space>laddas<space>ner<space>genom<space>transformern<space>HTTPCaller<space>p.g.a.<space>HTTP-statuskod:<space><space><at>Value<openparen>_http_status_code<closeparen>"};    };    lappend parmList {StringConcatenator_3};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_3 }    INPUT  FEATURE_TYPE Aggregator_8_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_3_OUTPUT         @Tcl2("StringConcatenator_3_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_9 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_3_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_9
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_9
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca3_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca3_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec3_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec3_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_9 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_9 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_9<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_runner { parmListString workspaceFile } {    global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands;    global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count;    incr Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count 0;    if { [info exists Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands] == 0 } {       set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands [join $commandArguments " "];    incr Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_10 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_10 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count == {<Unused>} } {       set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_batch_count 0;       set commandFile [Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_writeCommandFile $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_flushNeeded { } {    global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands;    if { [info exists Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands] == 1 && [llength $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_flushPending { } {    global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands;    if { [info exists Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands] == 1 && [llength $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands] > 0 } {       set workspaceToRun [lindex $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands 0];       set commandFile [Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_writeCommandFile $Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_10 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_10 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_10 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_process_count;       incr Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_10 $workspaceFileUnix;           global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_all_processes;           lappend Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_10 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_10 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_10_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_9_Output    TEST @Tcl2("Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_10)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessName<closeparen>,Logg_10)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_10)EX_TYPEERROREX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_10)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_10)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>RotDirectory<closeparen>,Logg_10)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_10)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_10)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_10)}") == SUCCESS
Tcl2 proc Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_summarizer { } {     global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_process_count 0;     FME_SetAttribute _proc_count [set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_process_count];     global Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_all_processes;     if {[info exists Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_all_processes]} {         set index 0;         foreach pid [set Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_10_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_10___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_10_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_10___cleanup___    TEST { @Tcl2(Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_10___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_10_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_10___cleanup___    TEST { @Tcl2(Logg_10_887f0a5b_4e12_49e5_871b_02aafcfa12610_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_10_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_6 }    INPUT  FEATURE_TYPE HTTPCaller_<REJECTED>    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_6_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_10_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>dataset<space>fr<u00e5>n<space><quote>$(InData$encode)<quote><space>avslogs<space>fr<u00e5>n<space>att<space>laddas<space>ner<space>genom<space>transformern<space>HTTPCaller.<space>Felkod<space>FME:<space><at>Value<openparen>_error<closeparen>.<space>HTTP-statuskod:<space><at>Value<openparen>_http_status_code<closeparen>"};    };    lappend parmList {StringConcatenator_10};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_10 }    INPUT  FEATURE_TYPE Aggregator_6_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_10_OUTPUT         @Tcl2("StringConcatenator_10_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_7 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_10_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_7
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_7
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca4_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca4_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec4_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec4_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_7 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_7 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_7<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_runner { parmListString workspaceFile } {    global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands;    global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count;    incr Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count 0;    if { [info exists Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands] == 0 } {       set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands [join $commandArguments " "];    incr Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_6 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_6 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count == {<Unused>} } {       set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_batch_count 0;       set commandFile [Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_writeCommandFile $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_flushNeeded { } {    global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands;    if { [info exists Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands] == 1 && [llength $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_flushPending { } {    global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands;    if { [info exists Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands] == 1 && [llength $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands] > 0 } {       set workspaceToRun [lindex $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands 0];       set commandFile [Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_writeCommandFile $Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_6 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_6 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_6 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_process_count;       incr Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_6 $workspaceFileUnix;           global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_all_processes;           lappend Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_6 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_6 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_6_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_7_Output    TEST @Tcl2("Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_6)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessName<closeparen>,Logg_6)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_6)EX_TYPEERROREX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_6)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_6)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>RotDirectory<closeparen>,Logg_6)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_6)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_6)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_6)}") == SUCCESS
Tcl2 proc Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_summarizer { } {     global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_process_count 0;     FME_SetAttribute _proc_count [set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_process_count];     global Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_all_processes;     if {[info exists Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_all_processes]} {         set index 0;         foreach pid [set Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_6_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_6___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_6_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_6___cleanup___    TEST { @Tcl2(Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_6___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_6_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_6___cleanup___    TEST { @Tcl2(Logg_6_33cf069b_1f18_4a96_9870_397d8da9cca90_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_6_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_5 }    INPUT  FEATURE_TYPE Tester_2_FAILED    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_5_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_7_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>har<space>ej<space>fungerande<space>URI<space>f<u00f6>r<space>nedladdning."};    };    lappend parmList {StringConcatenator_7};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_7 }    INPUT  FEATURE_TYPE Aggregator_5_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_7_OUTPUT         @Tcl2("StringConcatenator_7_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_6 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_7_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_6
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_6
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca5_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca5_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec5_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec5_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_6 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_6 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_6<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_runner { parmListString workspaceFile } {    global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands;    global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count;    incr Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count 0;    if { [info exists Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands] == 0 } {       set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands [join $commandArguments " "];    incr Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_5 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_5 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count == {<Unused>} } {       set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_batch_count 0;       set commandFile [Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_writeCommandFile $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_flushNeeded { } {    global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands;    if { [info exists Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands] == 1 && [llength $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_flushPending { } {    global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands;    if { [info exists Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands] == 1 && [llength $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands] > 0 } {       set workspaceToRun [lindex $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands 0];       set commandFile [Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_writeCommandFile $Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_5 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_5 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_5 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_process_count;       incr Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_5 $workspaceFileUnix;           global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_all_processes;           lappend Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_5 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_5 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_5_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_6_Output    TEST @Tcl2("Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_5)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessName$encode),Logg_5)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_5)EX_TYPEVARNINGEX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_5)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_5)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,$(RotDirectory$encode),Logg_5)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_5)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_5)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_5)}") == SUCCESS
Tcl2 proc Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_summarizer { } {     global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_process_count 0;     FME_SetAttribute _proc_count [set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_process_count];     global Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_all_processes;     if {[info exists Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_all_processes]} {         set index 0;         foreach pid [set Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_5_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_5___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_5_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_5___cleanup___    TEST { @Tcl2(Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_5___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_5_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_5___cleanup___    TEST { @Tcl2(Logg_5_e605adcf_8241_4c63_847a_b86f53b1c6690_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_5_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator }    INPUT  FEATURE_TYPE FeatureMerger_UNMERGED_REQUESTOR    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma><space> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_AGGREGATE          }
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME { AttributeCreator_7 }    COMMAND_PARM_EVALUATION SINGLE_PASS    INPUT  FEATURE_TYPE Aggregator_AGGREGATE    MULTI_FEATURE_MODE { NO }    NULL_ATTR_MODE { NO_OP }    ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV    ATTR_ACTION { "" "ProcessID" "SET_TO" "OK<u00c4>ND" }    OUTPUT { OUTPUT FEATURE_TYPE AttributeCreator_7_OUTPUT        }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_6_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>dataset<space>har<space>av<space>ok<u00e4>nd<space>anledning<space>inte<space>lyckats<space>att<space>l<u00e4>nkas<space>till<space>initierare<space>fr<u00e5>n<space>transformern<space>Creator.<space>Sp<u00e5>rning<space>ej<space>m<u00f6>jlig."};    };    lappend parmList {StringConcatenator_6};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_6 }    INPUT  FEATURE_TYPE AttributeCreator_7_OUTPUT    OUTPUT { FEATURE_TYPE StringConcatenator_6_OUTPUT         @Tcl2("StringConcatenator_6_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_3 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_6_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_3
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_3
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca6_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca6_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec6_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec6_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_3 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_3 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_3<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_runner { parmListString workspaceFile } {    global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands;    global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count;    incr Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count 0;    if { [info exists Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands] == 0 } {       set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands [join $commandArguments " "];    incr Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_4 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_4 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count == {<Unused>} } {       set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_batch_count 0;       set commandFile [Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_writeCommandFile $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_flushNeeded { } {    global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands;    if { [info exists Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands] == 1 && [llength $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_flushPending { } {    global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands;    if { [info exists Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands] == 1 && [llength $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands] > 0 } {       set workspaceToRun [lindex $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands 0];       set commandFile [Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_writeCommandFile $Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_4 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_4 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_4 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_process_count;       incr Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_4 $workspaceFileUnix;           global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_all_processes;           lappend Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_4 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_4 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_4_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_3_Output    TEST @Tcl2("Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_4)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessName$encode),Logg_4)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_4)EX_TYPEERROREX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_4)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_4)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,$(RotDirectory$encode),Logg_4)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_4)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_4)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_4)}") == SUCCESS
Tcl2 proc Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_summarizer { } {     global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_process_count 0;     FME_SetAttribute _proc_count [set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_process_count];     global Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_all_processes;     if {[info exists Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_all_processes]} {         set index 0;         foreach pid [set Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_4_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_4___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_4_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_4___cleanup___    TEST { @Tcl2(Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_4___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_4_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_4___cleanup___    TEST { @Tcl2(Logg_4_20b26900_8e88_4eef_a5dc_33b89185a77f0_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_4_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_3 }    INPUT  FEATURE_TYPE FeatureMerger_<REJECTED>    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_3_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_9_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>poster<space>fr<u00e5>n<space><quote>$(InData$encode)<quote><space>avslogs<space>fr<u00e5>n<space>att<space>l<u00e4>nkas<space>till<space>initieraren<space>transformern<space>Creator.<space>Fel:<space><at>Value<openparen>fme_rejection_code<closeparen>"};    };    lappend parmList {StringConcatenator_9};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_9 }    INPUT  FEATURE_TYPE Aggregator_3_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_9_OUTPUT         @Tcl2("StringConcatenator_9_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_4 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_9_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_4
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_4
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca7_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca7_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec7_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec7_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_4 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_4 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_4<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_runner { parmListString workspaceFile } {    global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands;    global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count;    incr Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count 0;    if { [info exists Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands] == 0 } {       set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands [join $commandArguments " "];    incr Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_7 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_7 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count == {<Unused>} } {       set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_batch_count 0;       set commandFile [Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_writeCommandFile $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_flushNeeded { } {    global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands;    if { [info exists Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands] == 1 && [llength $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_flushPending { } {    global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands;    if { [info exists Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands] == 1 && [llength $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands] > 0 } {       set workspaceToRun [lindex $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands 0];       set commandFile [Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_writeCommandFile $Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_7 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_7 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_7 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_process_count;       incr Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_7 $workspaceFileUnix;           global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_all_processes;           lappend Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_7 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_7 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_7_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_4_Output    TEST @Tcl2("Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_7)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessName<closeparen>,Logg_7)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_7)EX_TYPEERROREX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_7)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_7)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>RotDirectory<closeparen>,Logg_7)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_7)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_7)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_7)}") == SUCCESS
Tcl2 proc Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_summarizer { } {     global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_process_count 0;     FME_SetAttribute _proc_count [set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_process_count];     global Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_all_processes;     if {[info exists Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_all_processes]} {         set index 0;         foreach pid [set Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_7_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_7___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_7_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_7___cleanup___    TEST { @Tcl2(Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_7___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_7_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_7___cleanup___    TEST { @Tcl2(Logg_7_b394191b_ffc3_4c41_a857_89c78fdc9e7b0_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_7_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------
FACTORY_DEF {*} AggregateFactory    FACTORY_NAME { Aggregator_2 }    INPUT  FEATURE_TYPE FeatureReader_<REJECTED>    MODE { ONE_LEVEL }    FLUSH_WHEN_GROUPS_CHANGE { <Unused> }    REMOVE_GEOMETRY { NO }    COUNT_ATTRIBUTE { "Antal" }    ACCUMULATE_ATTRIBUTES { One }    LIST_ATTRS_TO_INCLUDE { <Unused> }    LIST_ATTRS_TO_INCLUDE_MODE { <Unused> }    SEPARATOR { <comma> }    PRODUCE_MULTIS { YES }    OUTPUT { AGGREGATE FEATURE_TYPE Aggregator_2_AGGREGATE          }
# -------------------------------------------------------------------------
Tcl2 proc StringConcatenator_8_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {Logg}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>Antal<closeparen><space>st.<space>poster<space>fr<u00e5>n<space><quote>$(InData$encode)<quote><space>avslogs.<space>Fel:<space><at>Value<openparen>_reader_error<closeparen>"};    };    lappend parmList {StringConcatenator_8};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { StringConcatenator_8 }    INPUT  FEATURE_TYPE Aggregator_2_AGGREGATE    OUTPUT { FEATURE_TYPE StringConcatenator_8_OUTPUT         @Tcl2("StringConcatenator_8_evaluator ")          }
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_2 Input Input Collector"   INPUT FEATURE_TYPE StringConcatenator_8_OUTPUT   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_Input
MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_2
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_XFORMER_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_2
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SUB_DOC_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss
DEFAULT_MACRO DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input1670231602 Input Splitter"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION
INCLUDE [    set expression {<at>DateTimeCast<openparen><at>DateTimeNow<openparen>local<closeparen><comma>datetime<closeparen>};    if { "NO" eq "NO" } {        set expression <at>TimeZoneRemove<openparen>$expression<closeparen>;    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION $expression"; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Input"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"       @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, _dts, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_EXPRESSION), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper)        }
# -------------------------------------------------------------------------
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST
DEFAULT_MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST
INCLUDE [    set repairInput {};    if {{NO} eq {YES}} {       set repairInput "<comma>repair";    };    set inFormat {FME|ISO};    if { {} ne {} } {       set inFormat {};       if { [string first "<quote>" $inFormat] != -1 } {          set inFormat [string map {"<quote>" "<backslash><quote>"} $inFormat];       };    };    set outFormat {%Y-%m-%d<space>%H:%M:%S};    if { [string first "<quote>" $outFormat] != -1 } {       set outFormat [string map {"<quote>" "<backslash><quote>"} $outFormat];    };    set parmList {};    set testList {};    set attrs [split {_dts} { }];    foreach attr $attrs {       lappend parmList $attr;       set funcAttr $attr;       if { [string first "<quote>" $attr] != -1 }       {          set funcAttr [string map {"<quote>" "<backslash><quote>"} $attr];          append funcAttr "<quote>";          set funcAttr "<quote>$funcAttr";       };       lappend parmList <at>DateTimeFormat<openparen><at>DateTimeParse<openparen><at>Value<openparen>$funcAttr<closeparen><comma><quote>$inFormat<quote>$repairInput<closeparen><comma><quote>$outFormat<quote><closeparen>;       lappend testList "TEST $attr ATTRIBUTE_VALUE_NULL \"\" ENCODED"    };    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST [join $parmList {,}]";    puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST [join $testList { }]"; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_1    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeStamper_OUTPUT"    OUTPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__         @EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV, $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_EXPRESSION_LIST), $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter)
FACTORY_DEF * TestFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_2    INPUT FEATURE_TYPE $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter__TEST_NULL__    $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_TEST_CLAUSE_LIST)    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"       fme_rejection_code "INVALID_INPUT"    OUTPUT FAILED FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_OUTPUT"    MULTI_FEATURE_MODE NO    NULL_ATTR_MODE NO_OP     ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV     ATTR_ACTION { "" "_mils" "SET_TO" "<at>Value<openparen>_dts<closeparen>" }    OUTPUT OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca8_replacer { findText replaceText invalidValue} {     set attrs [split \"_dts\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeCreator_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_3d0f8adf_8bc4_4dde_ba54_7207edf422ca8_replacer {<backslash>.<backslash>d*} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
MACRO casemac
INCLUDE [ if { {NO} == {NO} } { puts {MACRO casemac -nocase}} ]
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec8_replacer { findText replaceText invalidValue} {     set attrs [split \"_mils\" {,}];     set findValue [FME_DecodeText $findText];     set replaceValue [FME_DecodeText $replaceText];     foreach attr $attrs {       set attrVal [FME_GetAttribute $attr];       set noMatch true;       if {{YES} == {YES}} {         set newAttrVal [FME_ReplaceRegex $(casemac) $findValue $attrVal $replaceValue];       } else {         set newAttrVal [string map $(casemac) [list $findValue $replaceValue] $attrVal];       };       if { $newAttrVal ne $attrVal } {         set noMatch false;         FME_SetAttribute $attr $newAttrVal;       };       if {$noMatch} {          if { $invalidValue == {FME_NULL_VALUE} } {             FME_SetAttributeNull $attr;          } elseif { $invalidValue != {_FME_NO_OP_} }  {             FME_SetAttribute $attr [FME_DecodeText $invalidValue];          };       };     }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_0dd27207_f972_4670_8b37_4767dd7785ec8_replacer {.*<backslash>.} {} {_FME_NO_OP_}")
# -------------------------------------------------------------------------
# Since the Tcl "END" index specification starts at -1 for the second
# last character, and we've defined -1 to be the last charater, we've got
# small bit of fiddling to do
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex {lastValue} {     if {$lastValue < -1} {         incr lastValue;         return "end$lastValue";     }     elseif {$lastValue == -1} {         return "end";     }     else {         return $lastValue;     } }
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract {startIdx endIdx} {     FME_SetAttribute [FME_DecodeText _subMils]         [string range [FME_DecodeTextOrAttr @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_mils<closeparen>,$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor)]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $startIdx]                       [$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_fixLastIndex $endIdx]]     }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringReplacer_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_extract 0 2")          }
# -------------------------------------------------------------------------
Tcl2 proc $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator {} {    if {{OUTGOING} == {OUTGOING}} {      set attr [FME_DecodeText {_datetimestamp}];      if {[string length $attr] == 0} { return; };      set attrs [list [FME_EncodeText $attr]];    } else {      set attrAll {<Unused>};      if {[string length $attrAll] == 0} { return; };      set attrs [split {<Unused>} { }];    };    set parmList {{EvaluateExpression} {ATTR_CREATE_EXPR_PROPOGATE_MISSING_FDIV}};    foreach attr $attrs {     lappend parmList $attr;     lappend parmList {"<at>Value<openparen>_dts<closeparen>.<at>Value<openparen>_subMils<closeparen>"};    };    lappend parmList {$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator};    eval FME_Execute $parmList; }
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_SubstringExtractor_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"         @Tcl2("$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_evaluator ")          }
# -------------------------------------------------------------------------
# Build the List removal function and regular expression if there was any list attributes to be removed.
# If not, then we will not have any extra list removal call to @RemoveAttributes, which speeds the
# normal, non-list removal especially when in Bulk Mode.  Note that this computation of the regular expressions is done
# once during mapping file parse time.
INCLUDE [    set listAttributeRemoveRegexps {};    set anyList {no};    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append listAttributeRemoveRegexps ",^$attr$";       set anyList {yes};    };    if { ${anyList} == {no} } {        puts {MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC }    } else {        puts "MACRO $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC @RemoveAttributes(fme_pcre_match\"$listAttributeRemoveRegexps\")"    }; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME { $(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover }    INPUT  FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_StringConcatenator_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,_mils,_dts,_subMils)        $($(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_LIST_FUNC)         }
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>1670231602 Output Collector"   INPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_DateTimeConverter_<REJECTED>"   OUTPUT FEATURE_TYPE "$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(_dts)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DTStamperYYYY-MM-DD_HH:MI:SS.sss_WORKSPACE_NAME))}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_2 Output Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_Output   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_Output
FACTORY_DEF * TeeFactory   FACTORY_NAME "DTStamperYYYY-MM-DD_HH:MI:SS.sss_2 <Rejected> Output Renamer/Nuker"   INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_<Rejected>   OUTPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_<Rejected>
DEFAULT_MACRO _WB_BYPASS_TERMINATION No
FACTORY_DEF * TeeFactory FACTORY_NAME DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_<Rejected> INPUT FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_<Rejected>  OUTPUT FAILED FEATURE_TYPE * @Abort(ENCODED, DTStamperYYYY-MM-DD_HH:MI:SS.sss_2<space>output<space>a<space><lt>Rejected<gt><space>feature.<space><space>To<space>continue<space>translation<space>when<space>features<space>are<space>rejected<comma><space>change<space><apos>Workspace<space>Parameters<apos><space><gt><space>Translation<space><gt><space><apos>Rejected<space>Feature<space>Handling<apos><space>to<space><apos>Continue<space>Translation<apos>)
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Quote parameter strings for inclusion in command file using raw strings, with
# a tag computed to be unique within source string ${_uniq_=_sourceString_=_uniq_}
# [FMEENGINE-62584]
Tcl2 proc quotifyForParameterFileV3a { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   if {[regexp {[^a-zA-Z0-9_]} $sourceString]} {     set uniq {};     while {[string first [format \"=%s\}\" $uniq] $sourceString] >= 0} {       if {[catch {incr uniq}]} { set uniq 0 };     };     return [format \"$\{%s=%s=%s\}\" $uniq $sourceString $uniq];   } else {     return $sourceString;   }; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run. <parmListString> consists of
# parmeter name and value pairs. Value part is always wwjd encoded whether it is
# literal value or resolved expression value resulting from @EvaluateExpression().
# Each value part had to be wwjd encoded because mapping file parsing was mangling
# the values by removing double quotes and spaces when passed in to this Tcl routine.
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_runner { parmListString workspaceFile } {    global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands;    global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count;    incr Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count 0;    if { [info exists Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands] == 0 } {       set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3a $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DATETIME,TEXT,TEXT,CHOICE,TEXT_EDIT_OR_NUM_MULTI_FEATURE,TEXT,TEXT,TEXT,TEXT} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3a [FME_DecodeText $parmValue]];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend commandArguments {--FME_LAUNCH_VIEWER_APP};    lappend commandArguments {YES};    lappend Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands [join $commandArguments " "];    incr Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 Logg_3 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 Logg_3 $commandArgumentsToLog;    };    if { {Yes} != {No} || $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count == {<Unused>} } {       set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_batch_count 0;       set commandFile [Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_writeCommandFile $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_flushNeeded { } {    global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands;    if { [info exists Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands] == 1 && [llength $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands] > 0 } {       return YES;    } else {       return NO;    }; }
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_flushPending { } {    global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands;    if { [info exists Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands] == 1 && [llength $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands] > 0 } {       set workspaceToRun [lindex $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands 0];       set commandFile [Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_writeCommandFile $Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands];       if { $commandFile == {} } {          return FAILURE;       };       set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 Logg_3 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 Logg_3 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 Logg_3 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_process_count;       incr Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 Logg_3 $workspaceFileUnix;           global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_all_processes;           lappend Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 Logg_3 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 Logg_3 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_3_ExecutorAndRouter }    INPUT  FEATURE_TYPE DTStamperYYYY-MM-DD_HH:MI:SS.sss_2_Output    TEST @Tcl2("Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_runner {EX_DATE_TIME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_datetimestamp<closeparen>,Logg_3)EX_PROCESS_NAME@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessName<closeparen>,Logg_3)EX_ID@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>ProcessID<closeparen>,Logg_3)EX_TYPEERROREX@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>Logg<closeparen>,Logg_3)EX_WorkSpace@EvaluateExpression(FDIV,STRING_ENCODED,$(FME_MF_DIR_USERTYPED$encode)$(FME_MF_NAME$encode),Logg_3)EX_ROT_DIRECTORY@EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>RotDirectory<closeparen>,Logg_3)EX_PROCESS_MODUL_NAME@EvaluateExpression(FDIV,STRING_ENCODED,$(ProcessModulName$encode),Logg_3)IsWholeProcessRun@EvaluateExpression(FDIV,STRING_ENCODED,$(IsWholeProcessRun$encode),Logg_3)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)_logg.fmw,Logg_3)}") == SUCCESS
Tcl2 proc Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_summarizer { } {     global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_process_count 0;     FME_SetAttribute _proc_count [set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_process_count];     global Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_all_processes;     if {[info exists Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_all_processes]} {         set index 0;         foreach pid [set Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
# ------------------------------------------------------------------------------
# Clean up the last batch, if anything was pending.
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_3_CleanerUpperOfBatchesInitiator }    CREATE_AT_END yes    OUTPUT { FEATURE_TYPE Logg_3___cleanup___ }
# ------------------------------------------------------------------------------
# We only want to actually trigger the flush if there was something to run
# Otherwise we send out spurious extra features at the end of a run that are completely unnecessary
# As it stands, we are set up here to send out one "dud" completely empty feature that will
# go out FAILURE if there was a problem. It will have no attributes. Only sent out if there was something
# left to process and the run did not succeed.
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_3_CleanerUpperOfBatchesDoWeNeedToDoIt }    INPUT FEATURE_TYPE Logg_3___cleanup___    TEST { @Tcl2(Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_flushNeeded) == YES }    OUTPUT PASSED FEATURE_TYPE Logg_3___cleanup___
# Note that we don't output anything if we succeed -- we only catch and output the failure
FACTORY_DEF {*} TestFactory    FACTORY_NAME { Logg_3_CleanerUpperOfBatchesRunner }    INPUT FEATURE_TYPE Logg_3___cleanup___    TEST { @Tcl2(Logg_3_36c22fc0_17cd_4757_aad5_1d7e6aa13a000_flushPending) == SUCCESS }
FACTORY_DEF {*} CreationFactory    FACTORY_NAME { Logg_3_SummaryMaker }    CREATE_AT_END yes
# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory FACTORY_NAME "Destination Feature Type Routing Correlator"   COMMAND_PARM_EVALUATION SINGLE_PASS   INPUT FEATURE_TYPE *   FEATURE_TYPE_ATTRIBUTE __wb_out_feat_type__   OUTPUT ROUTED FEATURE_TYPE *    OUTPUT NOT_ROUTED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 [FME_GetAttribute fme_template_feature_type] 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

